<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Week</h1>
<h2>Week1~5</h2>
<p><span style="color: #008000;"><strong>Week1 </strong></span></p>
<p><strong>建立個人倉儲cd2020並編譯個人網站</strong></p>
<p>1.將<a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing" target="_blank">2019Fall可攜套件.7z</a>下載到USB內並進行解壓縮</p>
<p>2.進入<a href="https://github.com/" target="_blank">Github</a> <span>，</span>創建一個新的倉儲,命名為cd2020</p>
<p>3.進入儲存的資料夾tmp</p>
<p>4.git clone <a href="https://github.com/s40723225/cd2020">https://github.com/s40723225/cd2020</a></p>
<p>5.<span>4.git submodule add</span><span> </span><a href="https://github.com/mdecourse/cmsimde.git" target="_blank">https://github.com/mdecourse/cmsimde.git</a><span> cmsimde</span></p>
<p>6.進入cmsimde，<span>下載附件 python -m pip install flask_cors</span></p>
<p>7.<span>輸入 python wsgi.py 編輯倉儲</span></p>
<p><span>8.編輯完成後git status-&gt;git add .-&gt;git commit -m "該作業內容"-&gt;git push</span></p>
<p><span></span></p>
<p><span style="color: #008000;"><strong>Week2 </strong></span></p>
<p><strong>更新python3.8.2</strong></p>
<p>1.在隨身系統新增一個新資料夾cd20，並在cd20下新建資料夾data，接著在data下新增資料夾py382及wscite432、portablegit</p>
<p>2.<span>進入</span><a href="https://www.python.org/">Python</a><span>官網，並點選Downloads的<a href="https://www.python.org/downloads/windows/">Windows</a><span>，再點選</span><a href="https://www.python.org/downloads/release/python-382/">Latest Python 3 Release - Python 3.8.2</a></span></p>
<p><span>3.拉至底部，找到<a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2-amd64.exe">Windows x86-64 executable installer</a><span>並下載</span></span></p>
<p><span><span>4.開始下載，將pip選項取消打勾，按下next並將檔案下載至資料夾py382</span></span></p>
<p><span><span>5.下載SciTE系統 <span><a href="https://www.scintilla.org/wscite432.zip">full 64-bit download</a>，下載完後解壓縮至data下的wscite432</span></span></span></p>
<p><span><span><span>6.建立新的start.bat以及stop.bat</span></span></span></p>
<p><strong>start.bat:</strong></p>
<div>
<div class="syntaxhighlighter py" id="highlighter_317653">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py decorator">@echo</code> <code class="py plain">off</code></div>
<div class="line number2 index1 alt1"><code class="py functions">set</code> <code class="py plain">Disk</code><code class="py keyword">=</code><code class="py plain">y</code></div>
<div class="line number3 index2 alt2"><code class="py plain">subst </code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">: </code><code class="py string">"data"</code></div>
<div class="line number4 index3 alt1"><code class="py spaces"> </code> </div>
<div class="line number5 index4 alt2"><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:</code></div>
<div class="line number6 index5 alt1"><code class="py spaces"> </code> </div>
<div class="line number7 index6 alt2"><code class="py functions">set</code> <code class="py plain">HomePath</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\home</code></div>
<div class="line number8 index7 alt1"><code class="py functions">set</code> <code class="py plain">HomeDrive</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\home</code></div>
<div class="line number9 index8 alt2"><code class="py functions">set</code> <code class="py plain">Home</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\home</code></div>
<div class="line number10 index9 alt1"><code class="py functions">set</code> <code class="py plain">USERPROFILE</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\home</code></div>
<div class="line number11 index10 alt2"><code class="py spaces"> </code> </div>
<div class="line number12 index11 alt1"><code class="py plain">REM 將系統 Python 程式的 io 設為 utf</code><code class="py keyword">-</code><code class="py value">8</code></div>
<div class="line number13 index12 alt2"><code class="py functions">set</code> <code class="py plain">PYTHONIOENCODING</code><code class="py keyword">=</code><code class="py string">"utf-8"</code></div>
<div class="line number14 index13 alt1"><code class="py spaces"> </code> </div>
<div class="line number15 index14 alt2"><code class="py comments">#REM for putty</code></div>
<div class="line number16 index15 alt1"><code class="py comments">#Set GIT_HOME=%CDisk%:\portablegit\bin\</code></div>
<div class="line number17 index16 alt2"><code class="py comments">#Set GIT_SSH=%Disk%:\putty\plink.exe</code></div>
<div class="line number18 index17 alt1"><code class="py spaces"> </code> </div>
<div class="line number19 index18 alt2"><code class="py functions">set</code> <code class="py plain">PYTHONPATH</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382\DLLs;</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382\Lib;</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382\Lib\site</code><code class="py keyword">-</code><code class="py plain">packages;</code></div>
<div class="line number20 index19 alt1"><code class="py functions">set</code> <code class="py plain">PYTHONHOME</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382</code></div>
<div class="line number21 index20 alt2"><code class="py spaces"> </code> </div>
<div class="line number22 index21 alt1"><code class="py functions">set</code> <code class="py plain">path_python</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382;</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382\Scripts;</code></div>
<div class="line number23 index22 alt2"><code class="py functions">set</code> <code class="py plain">path_msys2</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\msys64\mingw64\</code><code class="py functions">bin</code><code class="py plain">;</code></div>
<div class="line number24 index23 alt1"><code class="py functions">set</code> <code class="py plain">path_git</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\portablegit\</code><code class="py functions">bin</code><code class="py plain">;</code></div>
<div class="line number25 index24 alt2"><code class="py functions">set</code> <code class="py plain">path_tcc</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\tcc;</code></div>
<div class="line number26 index25 alt1"><code class="py spaces"> </code> </div>
<div class="line number27 index26 alt2"><code class="py plain">path</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:;</code><code class="py keyword">%</code><code class="py plain">path_python</code><code class="py keyword">%</code><code class="py plain">;</code><code class="py keyword">%</code><code class="py plain">path_msys2</code><code class="py keyword">%</code><code class="py plain">;</code><code class="py keyword">%</code><code class="py plain">path_git</code><code class="py keyword">%</code><code class="py plain">;</code><code class="py keyword">%</code><code class="py plain">path_tcc</code><code class="py keyword">%</code><code class="py plain">;</code></div>
<div class="line number28 index27 alt1"><code class="py spaces"> </code> </div>
<div class="line number29 index28 alt2"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py plain">cmd.exe</code></div>
<div class="line number30 index29 alt1"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py plain">cmd.exe</code></div>
<div class="line number31 index30 alt2"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py plain">cmd.exe</code></div>
<div class="line number32 index31 alt1"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py plain">cmd.exe</code></div>
<div class="line number33 index32 alt2"><code class="py spaces"> </code> </div>
<div class="line number34 index33 alt1"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\wscite432\wscite\SciTE.exe</code></div>
<div class="line number35 index34 alt2"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\wscite432\wscite\SciTE.exe</code></div>
<div class="line number36 index35 alt1"><code class="py spaces"> </code> </div>
<div class="line number37 index36 alt2"><code class="py plain">Exit</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p><strong><span color="#000000"><span>stop.bat:</span></span></strong></p>
<div>
<div class="syntaxhighlighter py" id="highlighter_370423">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py decorator">@echo</code> <code class="py plain">off</code></div>
<div class="line number2 index1 alt1"><code class="py functions">set</code> <code class="py plain">Disk</code><code class="py keyword">=</code><code class="py plain">y</code></div>
<div class="line number3 index2 alt2"><code class="py plain">path</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">PATH</code><code class="py keyword">%</code><code class="py plain">;</code></div>
<div class="line number4 index3 alt1"><code class="py spaces"> </code> </div>
<div class="line number5 index4 alt2"><code class="py plain">taskkill </code><code class="py keyword">/</code><code class="py plain">IM python.exe </code><code class="py keyword">/</code><code class="py plain">F</code></div>
<div class="line number6 index5 alt1"><code class="py plain">taskkill </code><code class="py keyword">/</code><code class="py plain">IM pythonw.exe </code><code class="py keyword">/</code><code class="py plain">F</code></div>
<div class="line number7 index6 alt2"><code class="py plain">taskkill </code><code class="py keyword">/</code><code class="py plain">IM scite.exe </code><code class="py keyword">/</code><code class="py plain">F</code></div>
<div class="line number8 index7 alt1"><code class="py spaces"> </code> </div>
<div class="line number9 index8 alt2"><code class="py plain">REM 終止虛擬硬碟與目錄的對應</code></div>
<div class="line number10 index9 alt1"><code class="py plain">subst </code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">: </code><code class="py keyword">/</code><code class="py plain">D</code></div>
<div class="line number11 index10 alt2"><code class="py plain">REM 關閉 cmd 指令視窗</code></div>
<div class="line number12 index11 alt1"><code class="py plain">taskkill </code><code class="py keyword">/</code><code class="py plain">IM cmd.exe </code><code class="py keyword">/</code><code class="py plain">F</code></div>
<div class="line number13 index12 alt2"><code class="py spaces"> </code> </div>
<div class="line number14 index13 alt1"><code class="py plain">EXIT</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p><span>7.下載MSYS2 </span><a class="button" href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">msys2-x86_64-20190524.exe</a><span> 至data資料夾</span></p>
<p><span>8.下載PortableGit <a href="https://github.com/git-for-windows/git/releases/download/v2.25.1.windows.1/PortableGit-2.25.1-64-bit.7z.exe">64-bit Git for Windows Portable</a><span> 至 </span><span>portablegit資料夾</span></span></p>
<p><span><span>9.在Y槽中執行 python get-pip.py安裝pip軟件</span></span></p>
<p>10.完成後，安裝軟件包，輸入python pip install Flask</p>
<p></p>
<p><strong><span style="color: #008000;">Week3</span> </strong></p>
<p><strong>學習歷程Week1~3</strong></p>
<p>我的影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HKKeMBxqTxk" width="560"></iframe></p>
<p><span style="color: #008000;"><strong>Week4</strong> </span></p>
<p><strong>自主學習</strong></p>
<p>弄好前三周老師的要求以及複習進度</p>
<p></p>
<p><span style="color: #008000;"><strong>Week5</strong></span></p>
<h2>Week6~9</h2>
<p><span style="color: #008000;"><strong>Week6</strong></span></p>
<p><strong><span color="#008000" style="color: #000000;">利用OBS錄製影片以及Assignment2作業翻譯</span></strong></p>
<p><span color="#008000" style="color: #000000;">1.下載Windows版OBS</span></p>
<p><span color="#008000" style="color: #000000;">2.<span>OBS下載網址:</span><a href="https://obsproject.com/download">https://obsproject.com/download</a></span></p>
<p><span color="#008000" style="color: #000000;">3.新增顯示器的畫面以及錄製螢幕</span></p>
<p><strong><span color="#008000" style="color: #000000;">利用OBS與Youtube直播串流</span></strong></p>
<p>1.進入youtube開始直播，設定好後會產生串流金鑰</p>
<p>2.接著開啟OBS點右下角的開始串流，或是進入設定找到串流介面</p>
<p>3.進到串流設定介面後，把服務位址改成Youtube，後複製Youtube直播設定介面產生的串流金鑰，貼上至OBS的串流金鑰裡</p>
<p>4.完成串流金鑰設定之後即可點擊Youtube右上角開始直播</p>
<p><strong>Assignment2-topic翻譯</strong></p>
<p>連結：<a href="https://drive.google.com/file/d/1YHQwYduSMisiJQS-Jr_HhJghzIqP_SBc/view">https://drive.google.com/file/d/1YHQwYduSMisiJQS-  Jr_HhJghzIqP_SBc/view</a></p>
<p></p>
<p><strong><span color="#008000" style="color: #008000;">Week7</span></strong></p>
<p><strong><span style="color: #000000;"><span color="#008000">更新V rep</span></span></strong></p>
<p>1.進入CoppliaSim 官方網站:<a href="https://www.coppeliarobotics.com/">https://www.coppeliarobotics.com/</a></p>
<p>2.進入download 下載教育版</p>
<p>3.下載<a href="https://www.coppeliarobotics.com/files/CoppeliaSim_Edu_V4_0_0_Win.zip">CoppeliaSim Edu Binaries</a>可攜版本</p>
<p>4.完成後即可刪除原本的V rep</p>
<p><span style="color: #000000;"><strong>操控四輪車</strong></span></p>
<p><span style="color: #000000;">1.匯出四輪車</span></p>
<p><span style="color: #000000;">2.調整馬達功率<img alt="" height="606" src="/images/1.png" width="1039"/></span></p>
<p><span style="color: #000000;">3..檢查碰撞係數</span></p>
<p><span style="color: #000000;">4.匯入程式</span></p>
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py plain">function sysCall_init() </code></div>
<div class="line number2 index1 alt1"><code class="py spaces">    </code><code class="py plain">left_front_handle</code><code class="py keyword">=</code> <code class="py plain">sim.getObjectHandle(</code><code class="py string">'left_motor'</code><code class="py plain">)</code></div>
<div class="line number3 index2 alt2"><code class="py spaces">    </code><code class="py plain">left_back_handle</code><code class="py keyword">=</code> <code class="py plain">sim.getObjectHandle(</code><code class="py string">'left_motor'</code><code class="py plain">)</code></div>
<div class="line number4 index3 alt1"><code class="py spaces">    </code><code class="py plain">right_back_handle</code><code class="py keyword">=</code> <code class="py plain">sim.getObjectHandle(</code><code class="py string">'right_motor'</code><code class="py plain">)</code></div>
<div class="line number5 index4 alt2"><code class="py spaces">    </code><code class="py plain">right_front_handle</code><code class="py keyword">=</code> <code class="py plain">sim.getObjectHandle(</code><code class="py string">'right_motor'</code><code class="py plain">)</code></div>
<div class="line number6 index5 alt1"><code class="py spaces">    </code><code class="py plain">MaxVel</code><code class="py keyword">=</code><code class="py value">2</code></div>
<div class="line number7 index6 alt2"><code class="py spaces">    </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py value">0</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">    </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py value">0</code></div>
<div class="line number9 index8 alt2"><code class="py spaces">    </code><code class="py plain">dVel</code><code class="py keyword">=</code><code class="py value">0.5</code><code class="py plain">;</code></div>
<div class="line number10 index9 alt1"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">sim.setJointTargetVelocity(left_front_handle,leftvelocity)</code></div>
<div class="line number11 index10 alt2"><code class="py spaces">    </code><code class="py plain">sim.setJointTargetVelocity(left_back_handle,leftvelocity)</code></div>
<div class="line number12 index11 alt1"><code class="py spaces">    </code><code class="py plain">sim.setJointTargetVelocity(right_back_handle,rightvelocity)</code></div>
<div class="line number13 index12 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">sim.setJointTargetVelocity(right_front_handle,rightvelocity)</code></div>
<div class="line number14 index13 alt1"><code class="py plain">end</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"><code class="py plain">function sysCall_actuation() </code></div>
<div class="line number17 index16 alt2"><code class="py spaces">    </code><code class="py plain">message,auxiliaryData</code><code class="py keyword">=</code><code class="py plain">sim.getSimulatorMessage()</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py keyword">while</code> <code class="py plain">message~</code><code class="py keyword">=</code><code class="py keyword">-</code><code class="py value">1</code> <code class="py plain">do</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py plain">(message</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py plain">sim.message_keypress) then</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">32</code><code class="py plain">) then</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">right key</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py value">0</code></div>
<div class="line number23 index22 alt2"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py value">0</code></div>
<div class="line number24 index23 alt1"><code class="py spaces">                </code><code class="py plain">sim.setJointForce(left_front_handle, </code><code class="py value">0</code><code class="py plain">)</code></div>
<div class="line number25 index24 alt2"><code class="py spaces">                </code><code class="py plain">sim.setJointForce(left_back_handle, </code><code class="py value">0</code><code class="py plain">)</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">                </code><code class="py plain">sim.setJointForce(right_back_handle, </code><code class="py value">0</code><code class="py plain">)</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">                </code><code class="py plain">sim.setJointForce(right_front_handle, </code><code class="py value">0</code><code class="py plain">)</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">                </code><code class="py keyword">break</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">            </code><code class="py keyword">else</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">sim.setJointForce(left_front_handle, </code><code class="py value">10000</code><code class="py plain">)</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">                </code><code class="py plain">sim.setJointForce(left_back_handle, </code><code class="py value">10000</code><code class="py plain">)</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">                </code><code class="py plain">sim.setJointForce(right_back_handle, </code><code class="py value">10000</code><code class="py plain">)</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">sim.setJointForce(right_front_handle, </code><code class="py value">10000</code><code class="py plain">)</code></div>
<div class="line number34 index33 alt1"><code class="py spaces">            </code><code class="py plain">end</code></div>
<div class="line number35 index34 alt2"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">2007</code><code class="py plain">) then</code></div>
<div class="line number36 index35 alt1"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">up key</code></div>
<div class="line number37 index36 alt2"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">(leftvelocity</code><code class="py keyword">+</code><code class="py plain">rightvelocity)</code><code class="py keyword">/</code><code class="py value">2</code></div>
<div class="line number38 index37 alt1"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">leftvelocity</code></div>
<div class="line number39 index38 alt2"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">leftvelocity</code><code class="py keyword">+</code><code class="py plain">dVel</code></div>
<div class="line number40 index39 alt1"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">rightvelocity</code><code class="py keyword">+</code><code class="py plain">dVel</code></div>
<div class="line number41 index40 alt2"><code class="py spaces">            </code><code class="py plain">end</code></div>
<div class="line number42 index41 alt1"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">2008</code><code class="py plain">) then</code></div>
<div class="line number43 index42 alt2"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">down key</code></div>
<div class="line number44 index43 alt1"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">(leftvelocity</code><code class="py keyword">+</code><code class="py plain">rightvelocity)</code><code class="py keyword">/</code><code class="py value">2</code></div>
<div class="line number45 index44 alt2"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">leftvelocity</code></div>
<div class="line number46 index45 alt1"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">leftvelocity</code><code class="py keyword">-</code><code class="py plain">dVel</code></div>
<div class="line number47 index46 alt2"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">rightvelocity</code><code class="py keyword">-</code><code class="py plain">dVel</code></div>
<div class="line number48 index47 alt1"><code class="py spaces">            </code><code class="py plain">end</code></div>
<div class="line number49 index48 alt2"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">2009</code><code class="py plain">) then</code></div>
<div class="line number50 index49 alt1"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">left key</code></div>
<div class="line number51 index50 alt2"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">leftvelocity</code><code class="py keyword">-</code><code class="py plain">dVel</code></div>
<div class="line number52 index51 alt1"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">rightvelocity</code><code class="py keyword">+</code><code class="py plain">dVel</code></div>
<div class="line number53 index52 alt2"><code class="py spaces">            </code><code class="py plain">end</code></div>
<div class="line number54 index53 alt1"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">2010</code><code class="py plain">) then</code></div>
<div class="line number55 index54 alt2"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">right key</code></div>
<div class="line number56 index55 alt1"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">leftvelocity</code><code class="py keyword">+</code><code class="py plain">dVel</code></div>
<div class="line number57 index56 alt2"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">rightvelocity</code><code class="py keyword">-</code><code class="py plain">dVel</code></div>
<div class="line number58 index57 alt1"><code class="py spaces">            </code><code class="py plain">end</code></div>
<div class="line number59 index58 alt2"><code class="py spaces">        </code><code class="py plain">end</code></div>
<div class="line number60 index59 alt1"><code class="py spaces">        </code><code class="py plain">message,auxiliaryData</code><code class="py keyword">=</code><code class="py plain">sim.getSimulatorMessage()</code></div>
<div class="line number61 index60 alt2"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number62 index61 alt1"><code class="py spaces">    </code> </div>
<div class="line number63 index62 alt2"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">leftvelocity&gt;MaxVel then</code></div>
<div class="line number64 index63 alt1"><code class="py spaces">        </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">MaxVel</code></div>
<div class="line number65 index64 alt2"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number66 index65 alt1"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">leftvelocity&lt;</code><code class="py keyword">-</code><code class="py plain">MaxVel then</code></div>
<div class="line number67 index66 alt2"><code class="py spaces">        </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py keyword">-</code><code class="py plain">MaxVel</code></div>
<div class="line number68 index67 alt1"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number69 index68 alt2"><code class="py spaces">    </code> </div>
<div class="line number70 index69 alt1"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">rightvelocity&gt;MaxVel then</code></div>
<div class="line number71 index70 alt2"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">MaxVel</code></div>
<div class="line number72 index71 alt1"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number73 index72 alt2"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">rightvelocity&lt;</code><code class="py keyword">-</code><code class="py plain">MaxVel then</code></div>
<div class="line number74 index73 alt1"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py keyword">-</code><code class="py plain">MaxVel</code></div>
<div class="line number75 index74 alt2"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number76 index75 alt1"><code class="py spaces">    </code> </div>
<div class="line number77 index76 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">sim.setJointTargetVelocity(left_front_handle,leftvelocity)</code></div>
<div class="line number78 index77 alt1"><code class="py spaces">    </code><code class="py plain">sim.setJointTargetVelocity(left_back_handle,leftvelocity)</code></div>
<div class="line number79 index78 alt2"><code class="py spaces">    </code><code class="py plain">sim.setJointTargetVelocity(right_back_handle,rightvelocity)</code></div>
<div class="line number80 index79 alt1"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">sim.setJointTargetVelocity(right_front_handle,rightvelocity)</code></div>
<div class="line number81 index80 alt2"><code class="py spaces">    </code> </div>
<div class="line number82 index81 alt1"><code class="py plain">end</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p><br/><strong><span style="color: #339966;">Week8</span></strong></p>
<p>Python remote api 環境配置<br/>安裝模組:<strong><br/><br/></strong>1.pip install opencv-python<br/><br/>2.pip install imutils<br/><br/>3.pip install numpy</p>
<p>解決python 3.8.2版本leo閃退問題<strong><br/></strong><br/>1.輸入pip list，檢查leo版本是否為6.1版本(是的話即輸入pip uninstall leo 將此版本刪除)<br/>2.接著輸入pip install leo==6.2.1指定leo 6.2.1版本，即可正常運作。</p>
<p><strong>V-rep更新至最新版本</strong></p>
<p><strong><span>官方網站:</span><a href="https://www.coppeliarobotics.com/"><span>https://www.coppeliarobotics.com/</span><br/></a><span>可攜版:</span><span><a href="https://www.coppeliarobotics.com/files/CoppeliaSim_Edu_V4_0_0_Win.zip">CoppeliaSim Edu, Binaries<br/></a></span></strong></p>
<p><span style="color: #339966;"><strong>Week9</strong></span></p>
<p><span style="color: #000000;">期中考報告繳交</span></p>
<ol>
<li>老師與組長開會, 開放 live streaming, 回答與課程相關問題.</li>
<li>要求所有學員, 透過個人行事曆建立 Google Handout Meet 會議, 展示個人桌面操作, 開放 live stream, 並錄製至少 10 分鐘的個人期中簡報影片, 說明個人於 W1-W8 所完成的相關內容.</li>
<li>完成上述個人簡報錄製後, 將存於個人 Google Drive 中的期中簡報 mp4 影片, 以共享設置為所有登入 @gm 帳號的用戶都可以觀看.</li>
<li>完成上述影片共享設置後, 請登入 @gm 個人帳號, 至<span> </span><a href="https://forms.gle/T1Vs4sv9EdetxoWF7">https://forms.gle/T1Vs4sv9EdetxoWF7</a>  填寫表單並完成期中個人自評成績登錄.</li>
<li>完成上述各步驟後, 將繼續進行線上課程之其他內容直播或錄影</li>
</ol>
<p>我的期中個人報告</p>
<p><a href="https://drive.google.com/file/d/1KlOSfQQrVudcDsC9Jaq6Lnb_OSi0LQ8E/view">https://drive.google.com/file/d/1KlOSfQQrVudcDsC9Jaq6Lnb_OSi0LQ8E/view</a></p>
<h2>Week 10~14</h2>
<p><span style="color: #339966;"><strong>Week10</strong></span></p>
<p><strong></strong>1.先git clone cd2020pj1的倉儲</p>
<p>2.進入Google API</p>
<p>3.點選建立專案，輸入專案名稱，然後建立</p>
<p>4.<span>點選啟用，並點選憑證及設定同意畫面</span></p>
<p>5.<span>輸入名稱，接著存儲並設定憑證</span></p>
<p>6.<span>點選建立憑證及OAuth用戶端ID</span></p>
<p>7.<span>將ID及密碼複製到編輯器，命名為oauth_s學號.txt 並存儲在tmp下</span></p>
<p><span>8.接著設定來源跟URL，點選新增URL並授權JavaScriptipt來源下輸入https://localhost:8443及授權的重新定向URL輸入https://localhost:8443/login/google/，接著存儲</span></p>
<p><span>9.開啟leo，並打開cd2020pj1.leo，並將路徑以及名稱改為自己設定的</span></p>
<p><span>10.完成後存取，並點選ROC</span></p>
<p><span>11.接著輸入pip install authomatic，進入pj1，打開wsgi.py即完成</span></p>
<p><span style="color: #339966;"><strong></strong></span></p>
<p><span style="color: #339966;"><strong>Week11</strong></span></p>
<p><span style="color: #339966;"></span><span>1.下載</span><span><a href="https://www.virtualbox.org/wiki/Downloads">vitualbox</a>、<a href="https://drive.google.com/open?id=143jFMheM1xjLxhLkSAouThLzj3WUYX6_">ubuntu</a>、<a href="https://drive.google.com/open?id=1KlnsgBFyp6OpCC_BlYH-jKL4uJixpoBl">CoppeliaSim</a></span><span>四輪車控制器檔案</span></p>
<p><span>2.開啟vitualbox，匯入ubuntu</span></p>
<p><span>3.設定虛擬主機的網路埠號。[NET:設定-&gt;網路-&gt;附加到(A)改成NAT-&gt;進階-&gt;連接埠轉送-&gt;設定三個埠號(22、8443、19999)]</span></p>
<p><span>4.設定完成後啟動ubuntu</span></p>
<p><span>5.輸入密碼kmol2020，開啟lxterminal</span></p>
<p><span>6.輸入xterm&amp;並開啟，使用ctrl+右鍵將視窗放大</span></p>
<p><span>7.依照步驟打開coppeliasim，輸入ls查看內容</span></p>
<p><span>8.cd coppeliasim4_rev4-&gt;ls-&gt;cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04-&gt;ls-&gt;./coppeliaSim.sh</span></p>
<p><span>9.開啟後打開檔案sdc.ttt，並開啟下載好的CoppeliaSim四輪車控制器檔案</span></p>
<p><span>10.將檔案中的car_model.py放入編譯器中，打開CoppeliaSim中的模擬，四輪車開始繞圈即完成。</span></p>
<p><span></span></p>
<p><span style="color: #339966;"><strong>Week12</strong></span></p>
<p><strong></strong><strong>IPv4 Ubuntu 對外連線</strong></p>
<p>1.新增一個新的NAT網路</p>
<p>2.編輯此網路，並點選連接<span>埠轉送，再新增4個連接埠轉送埠號</span></p>
<p><span>3.設定主機IP為<span>127.0.0.1</span><span>；客體IP為</span><span>10.0.2.4</span><span>；主機連接埠為</span><span>22、19999、17443、18443</span><span>；客體連接埠為</span><span>22、19999、7443、8443</span></span></p>
<p><span>4.設定主機網路為NAT Network，完成後啟動輸入密碼kmol2020</span></p>
<p><span>5.開啟LXTermial，輸入<span>ifconfig再輸入<span>sudo apt install net-tools，接著輸入密碼kmol2020</span></span></span></p>
<p><span><span><span>6.cd tmp-&gt;ls-&gt;輸入ping 127.0.0.1測試-&gt;cd cd2020pj1-&gt;git pull</span></span></span></p>
<p><span><span><span>7.輸入sudo vi wsgi.py<span>編輯內容，按<span>i</span><span>進行編輯</span></span></span></span></span></p>
<p><span><span><span><span>8.將近端host改為10.0.2.4，按Esc輸入:wq編輯</span></span></span></span></p>
<p><span><span><span><span>9.開啟leo打開cd2020pj1.leo，點選Nav搜尋allowExt</span></span></span></span></p>
<p><span><span><span><span>10.點選fileuploadfrom，將第10行新增一個ttt檔，完成後存儲並關閉leo</span></span></span></span></p>
<p><span><span><span><span>11.在tmp下新增oauth_scrum.txt，輸入<span>sudo vi oauth_scrum.txt</span></span></span></span></span></p>
<p><span><span><span><span>12.按<span>i</span><span>編輯，內容隨意輸入，接著按</span><span>Esc</span><span>並輸入</span><span>:wq</span><span>存儲</span></span></span></span></span></p>
<p><span><span><span><span><span>13.cd cd2020pj1，並輸入<span>python3 wsgi.py</span><span>啟動，網址為https:/127.0.0.1:18443/alogin</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>14.帳號密碼為<span>admin</span><span>，進入後點選fileuploadform，點選要上傳的ttt檔</span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span>15.選download list檢查檔案是否上傳完成</span></span></span></span></span></span></span></p>
<p><strong>W12-3抽點網站：<a href="http://mde.tw/cdbw12-3/content/Week1.html">http://mde.tw/cdbw12-3/content/Week1.html</a></strong></p>
<p><span></span><strong>W12-3抽點倉儲：<a href="https://github.com/mdecourse/cdbw12-3">https://github.com/mdecourse/cdbw12-3</a></strong></p>
<p><span style="color: #339966;"><strong></strong></span></p>
<p><span style="color: #339966;"><strong>Week13</strong></span></p>
<p><span style="color: #339966;"></span><strong>IPv4遠端控制設定</strong></p>
<p><span>1.在搜尋輸入cmd開啟命令窗</span><br/><span>2.輸入ipconfig來查看IPv4的IP</span><br/><span>3.將虛擬主機整體系統埠號中的主機IP改為自己IPv4的IP</span><br/><span>4.啟動Ubuntu並開啟XLaunch.exe</span><br/><span>5.另一台主機開啟putty，並輸入遠端連線IP</span><br/><span>6.設定SSH下的X11，將Enable X11 fowarding打勾並在X display location中輸入localhost:0.0</span><br/><span>7.存儲後再啟動即可連線到該主機，帳號及密碼輸入kmol2020</span><br/><span>8.輸入xterm&amp;，並進入cd2020pj1。</span><br/><span>9.git pull檢查版本，在進入docs及cmsimde。</span><br/><span>10.輸入vi wsgi.py編輯(按i編輯)。</span><br/><span>11.將近端的host改為10.0.2.4。</span><br/><span>12.按Esc並輸入:wq存儲。</span><br/><span>13.輸入python3 wsgi.py，網址為該主機IP加上17443(https://主機IP:17443)。</span></p>
<p><strong>W13-3抽點網站：<a href="http://mde.tw/cdbw13-3/content/index.html">http://mde.tw/cdbw13-3/content/index.html</a></strong></p>
<p><strong>W13-3抽點倉儲：<a href="https://github.com/mdecourse/cdbw13-3">https://github.com/mdecourse/cdbw13-3</a></strong></p>
<p><strong></strong></p>
<p><span style="color: #339966;"><strong>Week14</strong></span></p>
<p><b>IPv6遠端控制設定(只能在學校做)</b></p>
<p>1.<span>從老師倉儲下的downloads打開w13_ipv6_assignment.txt，內有ipv6遠端控制說明</span></p>
<p>2.<span>點選IPv6內容，IPv6位址輸入2001:288:6004:17:2020:2::7225(2是乙班、7225為乙班25號)</span></p>
<p><span>3.子網路首碼長度輸入64、預設匝道輸入2001:288:6006:17::254</span></p>
<p><span>4.開啟虛擬主機，設定整體系統埠號，將主機IP改為個人IP</span></p>
<p><span>5.啟動Ubuntu輸入密碼kmol2020，並開啟LXTermial進入cd2020pj1</span></p>
<p><span>6.git pull檢查有無新版本，cd docs/cmsimde</span></p>
<p><span>7.輸入vi wsgi.py，將host改為個人主機IP(按i編輯，按Esc輸入:wq存儲)</span></p>
<p><span>8.在另一台主機開啟putty，輸入預連線主機IP</span></p>
<p><span>9.設定SSH下的X11(Enable X11 fowarding打勾並在X display location中輸入localhost:0.0)</span></p>
<p><span>10.設定完成後存儲，打開即可連線該主機，輸入帳密kmol2020，打開XLaunch.exe並輸入xterm&amp;啟動</span></p>
<p><span>11.進入tmp/cd2020pj1/docs/cmsimde，輸入python3 wsgi.py開啟遠端</span></p>
<p><span>12.網址為[該主機IP]:17443(必須關閉proxy)</span></p>
<p><span>13.完成遠端控制</span></p>
<p><strong>Week14-1抽點網站：<a href="http://mde.tw/cdbw14-1/content/index.html">http://mde.tw/cdbw14-1/content/index.html</a></strong></p>
<p><strong>Week14-1抽點倉儲：<a href="https://github.com/mdecourse/cdbw14-1">https://github.com/mdecourse/cdbw14-1</a></strong></p>
<p></p>
<h2>Week15~18</h2>
<h1>Assignment</h1>
<h2>Assignment1</h2>
<em><strong>random grouping</strong></em>
<p><span>（1）</span><span><span><span> request</span></span></span><span><span>模組：此模組是為了可以使用Python來下載網頁上的資料，根據</span></span><br/><span><span><span>請求</span></span></span><span><span>模組建立</span><span>適當</span><span>的HTTP請求，通過HTTP請求從網頁伺服器下載</span></span><br/><span><span>指定的資料，分為兩種模式發布，獲取。</span></span><br/><br/><span><span>參考文獻：</span><a href="https://ithelp.ithome.com.tw/articles/10206215"><span><span>https：/ /ithelp.ithome.com.tw/articles/10206215</span></span></a></span></p>
<p><span><span><span>(2) <span>ast</span><span>模組: 此模組是python原始碼到位元組碼的一種中間產物，藉助</span><span>ast</span><br/><span>模組可以從語法樹的角度分析原始碼結構，其中的語法</span><span>ast.literal_eval</span><span></span><br/><span>是為了能夠安全地評估表達式節點或包含Python文字或容器顯示的字符</span><br/><span>串。提供的字符串或節點只能由以下Python文字結構組成：字符串、字</span><br/><span>節、數字、元組、列表、字典、集合、布林值、None。</span><br/><br/><span>參考文獻:<span> </span></span><a href="https://docs.python.org/3/library/ast.html"><span>https://docs.python.org/3/library/ast.html</span></a><br/><span><a href="https://www.itread01.com/content/1544847254.html">https://www.itread01.com/content/1544847254.html</a></span><br/><span></span></span></span></span></p>
<div class="syntaxhighlighter py">(3)<span> </span><span>random</span>模組:此模組用於生成偽隨機數，且有許多種用法，例如:隨機選取<br/><span>choice</span>、隨機選取<span> sample</span><span> </span>(一次選多筆資料)、隨機調換順序<span> shuffle</span><span> </span>(就<br/>地調換順序)、隨機取得亂數<span> </span><span>random</span><span> </span>(0~1之間的隨機亂數)、隨機取得亂<br/>數<span> </span><span>uniform</span><span> </span>(可以指定範圍)。<br/><br/>參考文獻:<span> </span><a href="https://ithelp.ithome.com.tw/articles/10207483"><span>https://ithelp.ithome.com.tw/articles/10207483</span><br/></a><br/>(4)<span> </span><span>for</span>迴圈: 在處理資料的時候，時常會需要重複執行某些相同的步驟；而迴<br/>圈 (loop) 的作用是讓指定的某段敘述在條件符合的情況下一直重覆執行，<br/>是程式設計中很重要的一種控制結構，且分為兩類:<span>for</span>、<span>while</span></div>
<div class="syntaxhighlighter py"><span>參考文獻:<a href="https://medium.com/ccclub/ccclub-python-for-beginners-tutorial4990a5757aa6"><span><span> </span>https://medium.com/ccclub/ccclub-python-for-beginners-tutorial4990a5757aa6</span></a></span></div>
<div class="syntaxhighlighter py"><span></span></div>
<div class="syntaxhighlighter py"><span></span></div>
<div class="syntaxhighlighter py"><em><strong>portable system</strong></em>
<div class="syntaxhighlighter py">
<p><span>1.先去GOOGLE SEARCH <a href="https://www.python.org/downloads/windows/">PYTHON</a></span> </p>
<p><span>2.下載<span><a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2-amd64.exe">Windows x86-64 executable installer</a> </span></span></p>
<p><span><span><span>3.載完點並<span>不要勾選pip選項，接著按下next選取放置資料夾</span></span></span></span></p>
<p><span><span><span><span>4.在隨身系統下新增放置資料夾cd2020，並在cd2020下新建資料夾data，data&lt;py382&lt;<span>wscite432&lt;portablegit</span></span></span></span></span></p>
<p><span><span><span><span><span>5.下載SciTE系統<span> </span><span><span><a href="https://www.scintilla.org/wscite432.zip">full 64-bit download</a></span>，下載完後解壓縮至data下的wscite432</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>6.在cd2020下建立新的start.bat及stop.bat</span></span></span></span></span></span></p>
<p>7.至<span><span>SciTE系統更改</span></span>start.bat及stop.bat</p>
<p><span>8.</span><span>載入MSYS2 </span><span><a class="button" href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">msys2-x86_64-20190524.exe</a></span><span> 至data</span></p>
<p><span>9.</span><span>載入PortableGit </span><span><a href="https://github.com/git-for-windows/git/releases/download/v2.25.1.windows.1/PortableGit-2.25.1-64-bit.7z.exe">64-bit Git for Windows Portable</a></span><span> 至</span><span>portablegit</span></p>
<p><span>10</span><span color="#000000"><span>.裝入<span><a href="https://bootstrap.pypa.io/get-pip.py">pip</a></span></span></span><span>，另存新檔到data</span><span>11.測試</span><span>將python3.8.2版本，將少的模組下載回來</span></p>
<p><span></span></p>
<strong>Four Wheel Car</strong>
<p><span><a href="https://www.coppeliarobotics.com/helpFiles/en/simulation.htm"><strong>Simulation</strong></a></span><strong>&amp;<span><span><a href="https://www.coppeliarobotics.com/helpFiles/en/simulationPropertiesDialog.htm">Simulation settings dialog</a></span><span>:</span></span></strong><br/><span>  在任何機器製作完成後，都需要進行模擬測試，以確保機器能正常運作，或者測試機器的耐用性及安全性。在這兩章節主要說明了如何建立模擬，也教了如何調整模擬的速度，這能使我們模擬起來更有效率，接著就是模擬對話框的基本操作，其中也講解了在模擬過程可能會發生的狀況及解決方法，像是模擬速度調高或調慢，會造成不穩定或不準確的模擬，反之；還有因顯示卡的效能不足而造成模擬之屏幕刷新率太慢……等。</span><br/><span><a href="https://www.coppeliarobotics.com/helpFiles/en/bubbleRobTutorial.htm"><strong>BubbleRob tutorial</strong></a><strong>:</strong></span><br/><span>  此教程主要在教如何設置bubbleRob機器人，在上學期我們有實際操作過，其中的內容包含如何建立模型、設置感測器、調整視覺感測器，建立模型包含機器人本體、車輪、支撐滑塊、障礙物，不只是設置模型外型及尺寸，還要設置模型的物理屬性；設置感測器則是為了偵測障礙物，讓機器人能順利避開障礙物；視覺感測器則是為了能夠讓我們在機器人模擬時觀察機器人前方狀況。</span><br/><span><a href="https://www.coppeliarobotics.com/helpFiles/en/lineFollowingBubbleRobTutorial.htm"><strong>Line following BubbleRob tutorial</strong></a><strong>:</strong></span><br/><span> 在此教程中，旨在擴展</span><span>BubbleRob</span><span>的功能，以使</span><span>BubbleRob</span><span>遵循地面上的規則，也就是調整視覺感測器並設置路徑及給定程式碼，使機器人能隨著路徑運作。</span><br/><span><a href="https://www.coppeliarobotics.com/helpFiles/en/externalControllerTutorial.htm"><strong>External controller tutorial</strong></a><strong>:</strong></span><br/><span>  此教程說明好幾種方式能從外部控制機器人及模擬機器人，最方便的就是編寫程式碼直接附加到場景；另外還有利用編寫插件的方法，但此方法編寫程序更加複雜；第三種就是使用遠端API，此方法非常便捷也可以使用與運行真實機器人完全相同的程式碼來控制或模擬模型（例如虛擬機器人）</span><span>:</span><span>第四種方法是通過ROS節點，</span><span>ROS</span><span>與遠程</span><span>API</span><span>相似，是使多個分佈式進程相互連接的便捷方法；第五種是透過BlueZero（</span><span>BØ</span><span>）節點，與</span><span>ROS</span><span>類似，</span><span>BlueZero</span><span>是使多個分佈式進程相互連接的一種便捷方法，並且是一種輕量級的跨平台解決方案。</span></p>
</div>
</div>
<p></p>
</div>
</div>
</div>
</div>