<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Week</h1>
<h2>Week1~5</h2>
<p><span style="color: #008000;"><strong>Week1 </strong></span></p>
<p><strong>建立個人倉儲cd2020並編譯個人網站</strong></p>
<p>1.將<a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing" target="_blank">2019Fall可攜套件.7z</a>下載到USB內並進行解壓縮</p>
<p>2.進入<a href="https://github.com/" target="_blank">Github</a> <span>，</span>創建一個新的倉儲,命名為cd2020</p>
<p>3.進入儲存的資料夾tmp</p>
<p>4.git clone <a href="https://github.com/s40723225/cd2020">https://github.com/s40723225/cd2020</a></p>
<p>5.<span>4.git submodule add</span><span> </span><a href="https://github.com/mdecourse/cmsimde.git" target="_blank">https://github.com/mdecourse/cmsimde.git</a><span> cmsimde</span></p>
<p>6.進入cmsimde，<span>下載附件 python -m pip install flask_cors</span></p>
<p>7.<span>輸入 python wsgi.py 編輯倉儲</span></p>
<p><span>8.編輯完成後git status-&gt;git add .-&gt;git commit -m "該作業內容"-&gt;git push</span></p>
<p><span></span></p>
<p><span style="color: #008000;"><strong>Week2 </strong></span></p>
<p><strong>更新python3.8.2</strong></p>
<p>1.在隨身系統新增一個新資料夾cd20，並在cd20下新建資料夾data，接著在data下新增資料夾py382及wscite432、portablegit</p>
<p>2.<span>進入</span><a href="https://www.python.org/">Python</a><span>官網，並點選Downloads的<a href="https://www.python.org/downloads/windows/">Windows</a><span>，再點選</span><a href="https://www.python.org/downloads/release/python-382/">Latest Python 3 Release - Python 3.8.2</a></span></p>
<p><span>3.拉至底部，找到<a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2-amd64.exe">Windows x86-64 executable installer</a><span>並下載</span></span></p>
<p><span><span>4.開始下載，將pip選項取消打勾，按下next並將檔案下載至資料夾py382</span></span></p>
<p><span><span>5.下載SciTE系統 <span><a href="https://www.scintilla.org/wscite432.zip">full 64-bit download</a>，下載完後解壓縮至data下的wscite432</span></span></span></p>
<p><span><span><span>6.建立新的start.bat以及stop.bat</span></span></span></p>
<p><strong>start.bat:</strong></p>
<div>
<div class="syntaxhighlighter py" id="highlighter_317653">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py decorator">@echo</code> <code class="py plain">off</code></div>
<div class="line number2 index1 alt1"><code class="py functions">set</code> <code class="py plain">Disk</code><code class="py keyword">=</code><code class="py plain">y</code></div>
<div class="line number3 index2 alt2"><code class="py plain">subst </code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">: </code><code class="py string">"data"</code></div>
<div class="line number4 index3 alt1"><code class="py spaces"> </code> </div>
<div class="line number5 index4 alt2"><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:</code></div>
<div class="line number6 index5 alt1"><code class="py spaces"> </code> </div>
<div class="line number7 index6 alt2"><code class="py functions">set</code> <code class="py plain">HomePath</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\home</code></div>
<div class="line number8 index7 alt1"><code class="py functions">set</code> <code class="py plain">HomeDrive</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\home</code></div>
<div class="line number9 index8 alt2"><code class="py functions">set</code> <code class="py plain">Home</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\home</code></div>
<div class="line number10 index9 alt1"><code class="py functions">set</code> <code class="py plain">USERPROFILE</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\home</code></div>
<div class="line number11 index10 alt2"><code class="py spaces"> </code> </div>
<div class="line number12 index11 alt1"><code class="py plain">REM 將系統 Python 程式的 io 設為 utf</code><code class="py keyword">-</code><code class="py value">8</code></div>
<div class="line number13 index12 alt2"><code class="py functions">set</code> <code class="py plain">PYTHONIOENCODING</code><code class="py keyword">=</code><code class="py string">"utf-8"</code></div>
<div class="line number14 index13 alt1"><code class="py spaces"> </code> </div>
<div class="line number15 index14 alt2"><code class="py comments">#REM for putty</code></div>
<div class="line number16 index15 alt1"><code class="py comments">#Set GIT_HOME=%CDisk%:\portablegit\bin\</code></div>
<div class="line number17 index16 alt2"><code class="py comments">#Set GIT_SSH=%Disk%:\putty\plink.exe</code></div>
<div class="line number18 index17 alt1"><code class="py spaces"> </code> </div>
<div class="line number19 index18 alt2"><code class="py functions">set</code> <code class="py plain">PYTHONPATH</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382\DLLs;</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382\Lib;</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382\Lib\site</code><code class="py keyword">-</code><code class="py plain">packages;</code></div>
<div class="line number20 index19 alt1"><code class="py functions">set</code> <code class="py plain">PYTHONHOME</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382</code></div>
<div class="line number21 index20 alt2"><code class="py spaces"> </code> </div>
<div class="line number22 index21 alt1"><code class="py functions">set</code> <code class="py plain">path_python</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382;</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382\Scripts;</code></div>
<div class="line number23 index22 alt2"><code class="py functions">set</code> <code class="py plain">path_msys2</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\msys64\mingw64\</code><code class="py functions">bin</code><code class="py plain">;</code></div>
<div class="line number24 index23 alt1"><code class="py functions">set</code> <code class="py plain">path_git</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\portablegit\</code><code class="py functions">bin</code><code class="py plain">;</code></div>
<div class="line number25 index24 alt2"><code class="py functions">set</code> <code class="py plain">path_tcc</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\tcc;</code></div>
<div class="line number26 index25 alt1"><code class="py spaces"> </code> </div>
<div class="line number27 index26 alt2"><code class="py plain">path</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:;</code><code class="py keyword">%</code><code class="py plain">path_python</code><code class="py keyword">%</code><code class="py plain">;</code><code class="py keyword">%</code><code class="py plain">path_msys2</code><code class="py keyword">%</code><code class="py plain">;</code><code class="py keyword">%</code><code class="py plain">path_git</code><code class="py keyword">%</code><code class="py plain">;</code><code class="py keyword">%</code><code class="py plain">path_tcc</code><code class="py keyword">%</code><code class="py plain">;</code></div>
<div class="line number28 index27 alt1"><code class="py spaces"> </code> </div>
<div class="line number29 index28 alt2"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py plain">cmd.exe</code></div>
<div class="line number30 index29 alt1"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py plain">cmd.exe</code></div>
<div class="line number31 index30 alt2"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py plain">cmd.exe</code></div>
<div class="line number32 index31 alt1"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py plain">cmd.exe</code></div>
<div class="line number33 index32 alt2"><code class="py spaces"> </code> </div>
<div class="line number34 index33 alt1"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\wscite432\wscite\SciTE.exe</code></div>
<div class="line number35 index34 alt2"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\wscite432\wscite\SciTE.exe</code></div>
<div class="line number36 index35 alt1"><code class="py spaces"> </code> </div>
<div class="line number37 index36 alt2"><code class="py plain">Exit</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p><strong><span color="#000000"><span>stop.bat:</span></span></strong></p>
<div>
<div class="syntaxhighlighter py" id="highlighter_370423">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py decorator">@echo</code> <code class="py plain">off</code></div>
<div class="line number2 index1 alt1"><code class="py functions">set</code> <code class="py plain">Disk</code><code class="py keyword">=</code><code class="py plain">y</code></div>
<div class="line number3 index2 alt2"><code class="py plain">path</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">PATH</code><code class="py keyword">%</code><code class="py plain">;</code></div>
<div class="line number4 index3 alt1"><code class="py spaces"> </code> </div>
<div class="line number5 index4 alt2"><code class="py plain">taskkill </code><code class="py keyword">/</code><code class="py plain">IM python.exe </code><code class="py keyword">/</code><code class="py plain">F</code></div>
<div class="line number6 index5 alt1"><code class="py plain">taskkill </code><code class="py keyword">/</code><code class="py plain">IM pythonw.exe </code><code class="py keyword">/</code><code class="py plain">F</code></div>
<div class="line number7 index6 alt2"><code class="py plain">taskkill </code><code class="py keyword">/</code><code class="py plain">IM scite.exe </code><code class="py keyword">/</code><code class="py plain">F</code></div>
<div class="line number8 index7 alt1"><code class="py spaces"> </code> </div>
<div class="line number9 index8 alt2"><code class="py plain">REM 終止虛擬硬碟與目錄的對應</code></div>
<div class="line number10 index9 alt1"><code class="py plain">subst </code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">: </code><code class="py keyword">/</code><code class="py plain">D</code></div>
<div class="line number11 index10 alt2"><code class="py plain">REM 關閉 cmd 指令視窗</code></div>
<div class="line number12 index11 alt1"><code class="py plain">taskkill </code><code class="py keyword">/</code><code class="py plain">IM cmd.exe </code><code class="py keyword">/</code><code class="py plain">F</code></div>
<div class="line number13 index12 alt2"><code class="py spaces"> </code> </div>
<div class="line number14 index13 alt1"><code class="py plain">EXIT</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p><span>7.下載MSYS2 </span><a class="button" href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">msys2-x86_64-20190524.exe</a><span> 至data資料夾</span></p>
<p><span>8.下載PortableGit <a href="https://github.com/git-for-windows/git/releases/download/v2.25.1.windows.1/PortableGit-2.25.1-64-bit.7z.exe">64-bit Git for Windows Portable</a><span> 至 </span><span>portablegit資料夾</span></span></p>
<p><span><span>9.在Y槽中執行 python get-pip.py安裝pip軟件</span></span></p>
<p>10.完成後，安裝軟件包，輸入python pip install Flask</p>
<p></p>
<p><strong><span style="color: #008000;">Week3</span> </strong></p>
<p><strong>學習歷程Week1~3</strong></p>
<p>我的影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HKKeMBxqTxk" width="560"></iframe></p>
<p><span style="color: #008000;"><strong>Week4</strong> </span></p>
<p><strong>自主學習</strong></p>
<p>弄好前三周老師的要求以及複習進度</p>
<p></p>
<p><span style="color: #008000;"><strong>Week5</strong></span></p>
<h2>Week6~9</h2>
<p><span style="color: #008000;"><strong>Week6</strong></span></p>
<p><strong><span color="#008000" style="color: #000000;">利用OBS錄製影片以及Assignment2作業翻譯</span></strong></p>
<p><span color="#008000" style="color: #000000;">1.下載Windows版OBS</span></p>
<p><span color="#008000" style="color: #000000;">2.<span>OBS下載網址:</span><a href="https://obsproject.com/download">https://obsproject.com/download</a></span></p>
<p><span color="#008000" style="color: #000000;">3.新增顯示器的畫面以及錄製螢幕</span></p>
<p><strong><span color="#008000" style="color: #000000;">利用OBS與Youtube直播串流</span></strong></p>
<p>1.進入youtube開始直播，設定好後會產生串流金鑰</p>
<p>2.接著開啟OBS點右下角的開始串流，或是進入設定找到串流介面</p>
<p>3.進到串流設定介面後，把服務位址改成Youtube，後複製Youtube直播設定介面產生的串流金鑰，貼上至OBS的串流金鑰裡</p>
<p>4.完成串流金鑰設定之後即可點擊Youtube右上角開始直播</p>
<p><strong>Assignment2-topic翻譯</strong></p>
<p>連結：<a href="https://drive.google.com/file/d/1YHQwYduSMisiJQS-Jr_HhJghzIqP_SBc/view">https://drive.google.com/file/d/1YHQwYduSMisiJQS-  Jr_HhJghzIqP_SBc/view</a></p>
<p></p>
<p><strong><span color="#008000" style="color: #008000;">Week7</span></strong></p>
<p><strong><span style="color: #000000;"><span color="#008000">更新V rep</span></span></strong></p>
<p>1.進入CoppliaSim 官方網站:<a href="https://www.coppeliarobotics.com/">https://www.coppeliarobotics.com/</a></p>
<p>2.進入download 下載教育版</p>
<p>3.下載<a href="https://www.coppeliarobotics.com/files/CoppeliaSim_Edu_V4_0_0_Win.zip">CoppeliaSim Edu Binaries</a>可攜版本</p>
<p>4.完成後即可刪除原本的V rep</p>
<p><span style="color: #000000;"><strong>操控四輪車</strong></span></p>
<p><span style="color: #000000;">1.匯出四輪車</span></p>
<p><span style="color: #000000;">2.調整馬達功率<img alt="" height="606" src="/images/1.png" width="1039"/></span></p>
<p><span style="color: #000000;">3..檢查碰撞係數</span></p>
<p><span style="color: #000000;">4.匯入程式</span></p>
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py plain">function sysCall_init() </code></div>
<div class="line number2 index1 alt1"><code class="py spaces">    </code><code class="py plain">left_front_handle</code><code class="py keyword">=</code> <code class="py plain">sim.getObjectHandle(</code><code class="py string">'left_motor'</code><code class="py plain">)</code></div>
<div class="line number3 index2 alt2"><code class="py spaces">    </code><code class="py plain">left_back_handle</code><code class="py keyword">=</code> <code class="py plain">sim.getObjectHandle(</code><code class="py string">'left_motor'</code><code class="py plain">)</code></div>
<div class="line number4 index3 alt1"><code class="py spaces">    </code><code class="py plain">right_back_handle</code><code class="py keyword">=</code> <code class="py plain">sim.getObjectHandle(</code><code class="py string">'right_motor'</code><code class="py plain">)</code></div>
<div class="line number5 index4 alt2"><code class="py spaces">    </code><code class="py plain">right_front_handle</code><code class="py keyword">=</code> <code class="py plain">sim.getObjectHandle(</code><code class="py string">'right_motor'</code><code class="py plain">)</code></div>
<div class="line number6 index5 alt1"><code class="py spaces">    </code><code class="py plain">MaxVel</code><code class="py keyword">=</code><code class="py value">2</code></div>
<div class="line number7 index6 alt2"><code class="py spaces">    </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py value">0</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">    </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py value">0</code></div>
<div class="line number9 index8 alt2"><code class="py spaces">    </code><code class="py plain">dVel</code><code class="py keyword">=</code><code class="py value">0.5</code><code class="py plain">;</code></div>
<div class="line number10 index9 alt1"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">sim.setJointTargetVelocity(left_front_handle,leftvelocity)</code></div>
<div class="line number11 index10 alt2"><code class="py spaces">    </code><code class="py plain">sim.setJointTargetVelocity(left_back_handle,leftvelocity)</code></div>
<div class="line number12 index11 alt1"><code class="py spaces">    </code><code class="py plain">sim.setJointTargetVelocity(right_back_handle,rightvelocity)</code></div>
<div class="line number13 index12 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">sim.setJointTargetVelocity(right_front_handle,rightvelocity)</code></div>
<div class="line number14 index13 alt1"><code class="py plain">end</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"><code class="py plain">function sysCall_actuation() </code></div>
<div class="line number17 index16 alt2"><code class="py spaces">    </code><code class="py plain">message,auxiliaryData</code><code class="py keyword">=</code><code class="py plain">sim.getSimulatorMessage()</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py keyword">while</code> <code class="py plain">message~</code><code class="py keyword">=</code><code class="py keyword">-</code><code class="py value">1</code> <code class="py plain">do</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py plain">(message</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py plain">sim.message_keypress) then</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">32</code><code class="py plain">) then</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">right key</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py value">0</code></div>
<div class="line number23 index22 alt2"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py value">0</code></div>
<div class="line number24 index23 alt1"><code class="py spaces">                </code><code class="py plain">sim.setJointForce(left_front_handle, </code><code class="py value">0</code><code class="py plain">)</code></div>
<div class="line number25 index24 alt2"><code class="py spaces">                </code><code class="py plain">sim.setJointForce(left_back_handle, </code><code class="py value">0</code><code class="py plain">)</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">                </code><code class="py plain">sim.setJointForce(right_back_handle, </code><code class="py value">0</code><code class="py plain">)</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">                </code><code class="py plain">sim.setJointForce(right_front_handle, </code><code class="py value">0</code><code class="py plain">)</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">                </code><code class="py keyword">break</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">            </code><code class="py keyword">else</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">sim.setJointForce(left_front_handle, </code><code class="py value">10000</code><code class="py plain">)</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">                </code><code class="py plain">sim.setJointForce(left_back_handle, </code><code class="py value">10000</code><code class="py plain">)</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">                </code><code class="py plain">sim.setJointForce(right_back_handle, </code><code class="py value">10000</code><code class="py plain">)</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">sim.setJointForce(right_front_handle, </code><code class="py value">10000</code><code class="py plain">)</code></div>
<div class="line number34 index33 alt1"><code class="py spaces">            </code><code class="py plain">end</code></div>
<div class="line number35 index34 alt2"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">2007</code><code class="py plain">) then</code></div>
<div class="line number36 index35 alt1"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">up key</code></div>
<div class="line number37 index36 alt2"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">(leftvelocity</code><code class="py keyword">+</code><code class="py plain">rightvelocity)</code><code class="py keyword">/</code><code class="py value">2</code></div>
<div class="line number38 index37 alt1"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">leftvelocity</code></div>
<div class="line number39 index38 alt2"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">leftvelocity</code><code class="py keyword">+</code><code class="py plain">dVel</code></div>
<div class="line number40 index39 alt1"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">rightvelocity</code><code class="py keyword">+</code><code class="py plain">dVel</code></div>
<div class="line number41 index40 alt2"><code class="py spaces">            </code><code class="py plain">end</code></div>
<div class="line number42 index41 alt1"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">2008</code><code class="py plain">) then</code></div>
<div class="line number43 index42 alt2"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">down key</code></div>
<div class="line number44 index43 alt1"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">(leftvelocity</code><code class="py keyword">+</code><code class="py plain">rightvelocity)</code><code class="py keyword">/</code><code class="py value">2</code></div>
<div class="line number45 index44 alt2"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">leftvelocity</code></div>
<div class="line number46 index45 alt1"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">leftvelocity</code><code class="py keyword">-</code><code class="py plain">dVel</code></div>
<div class="line number47 index46 alt2"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">rightvelocity</code><code class="py keyword">-</code><code class="py plain">dVel</code></div>
<div class="line number48 index47 alt1"><code class="py spaces">            </code><code class="py plain">end</code></div>
<div class="line number49 index48 alt2"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">2009</code><code class="py plain">) then</code></div>
<div class="line number50 index49 alt1"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">left key</code></div>
<div class="line number51 index50 alt2"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">leftvelocity</code><code class="py keyword">-</code><code class="py plain">dVel</code></div>
<div class="line number52 index51 alt1"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">rightvelocity</code><code class="py keyword">+</code><code class="py plain">dVel</code></div>
<div class="line number53 index52 alt2"><code class="py spaces">            </code><code class="py plain">end</code></div>
<div class="line number54 index53 alt1"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">(auxiliaryData[</code><code class="py value">1</code><code class="py plain">]</code><code class="py keyword">=</code><code class="py keyword">=</code><code class="py value">2010</code><code class="py plain">) then</code></div>
<div class="line number55 index54 alt2"><code class="py spaces">                </code><code class="py keyword">-</code><code class="py keyword">-</code> <code class="py plain">right key</code></div>
<div class="line number56 index55 alt1"><code class="py spaces">                </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">leftvelocity</code><code class="py keyword">+</code><code class="py plain">dVel</code></div>
<div class="line number57 index56 alt2"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">rightvelocity</code><code class="py keyword">-</code><code class="py plain">dVel</code></div>
<div class="line number58 index57 alt1"><code class="py spaces">            </code><code class="py plain">end</code></div>
<div class="line number59 index58 alt2"><code class="py spaces">        </code><code class="py plain">end</code></div>
<div class="line number60 index59 alt1"><code class="py spaces">        </code><code class="py plain">message,auxiliaryData</code><code class="py keyword">=</code><code class="py plain">sim.getSimulatorMessage()</code></div>
<div class="line number61 index60 alt2"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number62 index61 alt1"><code class="py spaces">    </code> </div>
<div class="line number63 index62 alt2"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">leftvelocity&gt;MaxVel then</code></div>
<div class="line number64 index63 alt1"><code class="py spaces">        </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py plain">MaxVel</code></div>
<div class="line number65 index64 alt2"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number66 index65 alt1"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">leftvelocity&lt;</code><code class="py keyword">-</code><code class="py plain">MaxVel then</code></div>
<div class="line number67 index66 alt2"><code class="py spaces">        </code><code class="py plain">leftvelocity</code><code class="py keyword">=</code><code class="py keyword">-</code><code class="py plain">MaxVel</code></div>
<div class="line number68 index67 alt1"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number69 index68 alt2"><code class="py spaces">    </code> </div>
<div class="line number70 index69 alt1"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">rightvelocity&gt;MaxVel then</code></div>
<div class="line number71 index70 alt2"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py plain">MaxVel</code></div>
<div class="line number72 index71 alt1"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number73 index72 alt2"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">rightvelocity&lt;</code><code class="py keyword">-</code><code class="py plain">MaxVel then</code></div>
<div class="line number74 index73 alt1"><code class="py spaces">                </code><code class="py plain">rightvelocity</code><code class="py keyword">=</code><code class="py keyword">-</code><code class="py plain">MaxVel</code></div>
<div class="line number75 index74 alt2"><code class="py spaces">    </code><code class="py plain">end</code></div>
<div class="line number76 index75 alt1"><code class="py spaces">    </code> </div>
<div class="line number77 index76 alt2"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">sim.setJointTargetVelocity(left_front_handle,leftvelocity)</code></div>
<div class="line number78 index77 alt1"><code class="py spaces">    </code><code class="py plain">sim.setJointTargetVelocity(left_back_handle,leftvelocity)</code></div>
<div class="line number79 index78 alt2"><code class="py spaces">    </code><code class="py plain">sim.setJointTargetVelocity(right_back_handle,rightvelocity)</code></div>
<div class="line number80 index79 alt1"><code class="py spaces">    </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">sim.setJointTargetVelocity(right_front_handle,rightvelocity)</code></div>
<div class="line number81 index80 alt2"><code class="py spaces">    </code> </div>
<div class="line number82 index81 alt1"><code class="py plain">end</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p><br/><strong><span style="color: #339966;">Week8</span></strong></p>
<p>Python remote api 環境配置<br/>安裝模組:<strong><br/><br/></strong>1.pip install opencv-python<br/><br/>2.pip install imutils<br/><br/>3.pip install numpy</p>
<p>解決python 3.8.2版本leo閃退問題<strong><br/></strong><br/>1.輸入pip list，檢查leo版本是否為6.1版本(是的話即輸入pip uninstall leo 將此版本刪除)<br/>2.接著輸入pip install leo==6.2.1指定leo 6.2.1版本，即可正常運作。</p>
<p><strong>V-rep更新至最新版本</strong></p>
<p><strong><span>官方網站:</span><a href="https://www.coppeliarobotics.com/"><span>https://www.coppeliarobotics.com/</span><br/></a><span>可攜版:</span><span><a href="https://www.coppeliarobotics.com/files/CoppeliaSim_Edu_V4_0_0_Win.zip">CoppeliaSim Edu, Binaries<br/></a></span></strong></p>
<p><span style="color: #339966;"><strong>Week9</strong></span></p>
<p><span style="color: #000000;">期中考報告繳交</span></p>
<ol>
<li>老師與組長開會, 開放 live streaming, 回答與課程相關問題.</li>
<li>要求所有學員, 透過個人行事曆建立 Google Handout Meet 會議, 展示個人桌面操作, 開放 live stream, 並錄製至少 10 分鐘的個人期中簡報影片, 說明個人於 W1-W8 所完成的相關內容.</li>
<li>完成上述個人簡報錄製後, 將存於個人 Google Drive 中的期中簡報 mp4 影片, 以共享設置為所有登入 @gm 帳號的用戶都可以觀看.</li>
<li>完成上述影片共享設置後, 請登入 @gm 個人帳號, 至<span> </span><a href="https://forms.gle/T1Vs4sv9EdetxoWF7">https://forms.gle/T1Vs4sv9EdetxoWF7</a>  填寫表單並完成期中個人自評成績登錄.</li>
<li>完成上述各步驟後, 將繼續進行線上課程之其他內容直播或錄影</li>
</ol>
<p>我的期中個人報告</p>
<p><a href="https://drive.google.com/file/d/1KlOSfQQrVudcDsC9Jaq6Lnb_OSi0LQ8E/view">https://drive.google.com/file/d/1KlOSfQQrVudcDsC9Jaq6Lnb_OSi0LQ8E/view</a></p>
<h2>Week 10~14</h2>
<p><span style="color: #339966;"><strong>Week10</strong></span></p>
<p><strong></strong>1.先git clone cd2020pj1的倉儲</p>
<p>2.進入Google API</p>
<p>3.點選建立專案，輸入專案名稱，然後建立</p>
<p>4.<span>點選啟用，並點選憑證及設定同意畫面</span></p>
<p>5.<span>輸入名稱，接著存儲並設定憑證</span></p>
<p>6.<span>點選建立憑證及OAuth用戶端ID</span></p>
<p>7.<span>將ID及密碼複製到編輯器，命名為oauth_s學號.txt 並存儲在tmp下</span></p>
<p><span>8.接著設定來源跟URL，點選新增URL並授權JavaScriptipt來源下輸入https://localhost:8443及授權的重新定向URL輸入https://localhost:8443/login/google/，接著存儲</span></p>
<p><span>9.開啟leo，並打開cd2020pj1.leo，並將路徑以及名稱改為自己設定的</span></p>
<p><span>10.完成後存取，並點選ROC</span></p>
<p><span>11.接著輸入pip install authomatic，進入pj1，打開wsgi.py即完成</span></p>
<p><span style="color: #339966;"><strong></strong></span></p>
<p><span style="color: #339966;"><strong>Week11</strong></span></p>
<p><span style="color: #339966;"></span><span>1.下載</span><span><a href="https://www.virtualbox.org/wiki/Downloads">vitualbox</a>、<a href="https://drive.google.com/open?id=143jFMheM1xjLxhLkSAouThLzj3WUYX6_">ubuntu</a>、<a href="https://drive.google.com/open?id=1KlnsgBFyp6OpCC_BlYH-jKL4uJixpoBl">CoppeliaSim</a></span><span>四輪車控制器檔案</span></p>
<p><span>2.開啟vitualbox，匯入ubuntu</span></p>
<p><span>3.設定虛擬主機的網路埠號。[NET:設定-&gt;網路-&gt;附加到(A)改成NAT-&gt;進階-&gt;連接埠轉送-&gt;設定三個埠號(22、8443、19999)]</span></p>
<p><span>4.設定完成後啟動ubuntu</span></p>
<p><span>5.輸入密碼kmol2020，開啟lxterminal</span></p>
<p><span>6.輸入xterm&amp;並開啟，使用ctrl+右鍵將視窗放大</span></p>
<p><span>7.依照步驟打開coppeliasim，輸入ls查看內容</span></p>
<p><span>8.cd coppeliasim4_rev4-&gt;ls-&gt;cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04-&gt;ls-&gt;./coppeliaSim.sh</span></p>
<p><span>9.開啟後打開檔案sdc.ttt，並開啟下載好的CoppeliaSim四輪車控制器檔案</span></p>
<p><span>10.將檔案中的car_model.py放入編譯器中，打開CoppeliaSim中的模擬，四輪車開始繞圈即完成。</span></p>
<p><span></span></p>
<p><span style="color: #339966;"><strong>Week12</strong></span></p>
<p><strong></strong><strong>IPv4 Ubuntu 對外連線</strong></p>
<p>1.新增一個新的NAT網路</p>
<p>2.編輯此網路，並點選連接<span>埠轉送，再新增4個連接埠轉送埠號</span></p>
<p><span>3.設定主機IP為<span>127.0.0.1</span><span>；客體IP為</span><span>10.0.2.4</span><span>；主機連接埠為</span><span>22、19999、17443、18443</span><span>；客體連接埠為</span><span>22、19999、7443、8443</span></span></p>
<p><span>4.設定主機網路為NAT Network，完成後啟動輸入密碼kmol2020</span></p>
<p><span>5.開啟LXTermial，輸入<span>ifconfig再輸入<span>sudo apt install net-tools，接著輸入密碼kmol2020</span></span></span></p>
<p><span><span><span>6.cd tmp-&gt;ls-&gt;輸入ping 127.0.0.1測試-&gt;cd cd2020pj1-&gt;git pull</span></span></span></p>
<p><span><span><span>7.輸入sudo vi wsgi.py<span>編輯內容，按<span>i</span><span>進行編輯</span></span></span></span></span></p>
<p><span><span><span><span>8.將近端host改為10.0.2.4，按Esc輸入:wq編輯</span></span></span></span></p>
<p><span><span><span><span>9.開啟leo打開cd2020pj1.leo，點選Nav搜尋allowExt</span></span></span></span></p>
<p><span><span><span><span>10.點選fileuploadfrom，將第10行新增一個ttt檔，完成後存儲並關閉leo</span></span></span></span></p>
<p><span><span><span><span>11.在tmp下新增oauth_scrum.txt，輸入<span>sudo vi oauth_scrum.txt</span></span></span></span></span></p>
<p><span><span><span><span>12.按<span>i</span><span>編輯，內容隨意輸入，接著按</span><span>Esc</span><span>並輸入</span><span>:wq</span><span>存儲</span></span></span></span></span></p>
<p><span><span><span><span><span>13.cd cd2020pj1，並輸入<span>python3 wsgi.py</span><span>啟動，網址為https:/127.0.0.1:18443/alogin</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>14.帳號密碼為<span>admin</span><span>，進入後點選fileuploadform，點選要上傳的ttt檔</span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span>15.選download list檢查檔案是否上傳完成</span></span></span></span></span></span></span></p>
<p><strong>W12-3抽點網站：<a href="http://mde.tw/cdbw12-3/content/Week1.html">http://mde.tw/cdbw12-3/content/Week1.html</a></strong></p>
<p><span></span><strong>W12-3抽點倉儲：<a href="https://github.com/mdecourse/cdbw12-3">https://github.com/mdecourse/cdbw12-3</a></strong></p>
<p><span style="color: #339966;"><strong></strong></span></p>
<p><span style="color: #339966;"><strong>Week13</strong></span></p>
<p><span style="color: #339966;"></span><strong>IPv4遠端控制設定</strong></p>
<p><span>1.在搜尋輸入cmd開啟命令窗</span><br/><span>2.輸入ipconfig來查看IPv4的IP</span><br/><span>3.將虛擬主機整體系統埠號中的主機IP改為自己IPv4的IP</span><br/><span>4.啟動Ubuntu並開啟XLaunch.exe</span><br/><span>5.另一台主機開啟putty，並輸入遠端連線IP</span><br/><span>6.設定SSH下的X11，將Enable X11 fowarding打勾並在X display location中輸入localhost:0.0</span><br/><span>7.存儲後再啟動即可連線到該主機，帳號及密碼輸入kmol2020</span><br/><span>8.輸入xterm&amp;，並進入cd2020pj1。</span><br/><span>9.git pull檢查版本，在進入docs及cmsimde。</span><br/><span>10.輸入vi wsgi.py編輯(按i編輯)。</span><br/><span>11.將近端的host改為10.0.2.4。</span><br/><span>12.按Esc並輸入:wq存儲。</span><br/><span>13.輸入python3 wsgi.py，網址為該主機IP加上17443(https://主機IP:17443)。</span></p>
<p><strong>W13-3抽點網站：<a href="http://mde.tw/cdbw13-3/content/index.html">http://mde.tw/cdbw13-3/content/index.html</a></strong></p>
<p><strong>W13-3抽點倉儲：<a href="https://github.com/mdecourse/cdbw13-3">https://github.com/mdecourse/cdbw13-3</a></strong></p>
<p><strong></strong></p>
<p><span style="color: #339966;"><strong>Week14</strong></span></p>
<p><b>IPv6遠端控制設定(只能在學校做)</b></p>
<p>1.<span>從老師倉儲下的downloads打開w13_ipv6_assignment.txt，內有ipv6遠端控制說明</span></p>
<p>2.<span>點選IPv6內容，IPv6位址輸入2001:288:6004:17:2020:2::7225(2是乙班、7225為乙班25號)</span></p>
<p><span>3.子網路首碼長度輸入64、預設匝道輸入2001:288:6006:17::254</span></p>
<p><span>4.開啟虛擬主機，設定整體系統埠號，將主機IP改為個人IP</span></p>
<p><span>5.啟動Ubuntu輸入密碼kmol2020，並開啟LXTermial進入cd2020pj1</span></p>
<p><span>6.git pull檢查有無新版本，cd docs/cmsimde</span></p>
<p><span>7.輸入vi wsgi.py，將host改為個人主機IP(按i編輯，按Esc輸入:wq存儲)</span></p>
<p><span>8.在另一台主機開啟putty，輸入預連線主機IP</span></p>
<p><span>9.設定SSH下的X11(Enable X11 fowarding打勾並在X display location中輸入localhost:0.0)</span></p>
<p><span>10.設定完成後存儲，打開即可連線該主機，輸入帳密kmol2020，打開XLaunch.exe並輸入xterm&amp;啟動</span></p>
<p><span>11.進入tmp/cd2020pj1/docs/cmsimde，輸入python3 wsgi.py開啟遠端</span></p>
<p><span>12.網址為[該主機IP]:17443(必須關閉proxy)</span></p>
<p><span>13.完成遠端控制</span></p>
<p><strong>Week14-1抽點網站：<a href="http://mde.tw/cdbw14-1/content/index.html">http://mde.tw/cdbw14-1/content/index.html</a></strong></p>
<p><strong>Week14-1抽點倉儲：<a href="https://github.com/mdecourse/cdbw14-1">https://github.com/mdecourse/cdbw14-1</a></strong></p>
<p></p>
<h2>Week15~18</h2>
<p><span style="color: #339966;"><strong>Week15</strong></span><strong></strong></p>
<p><strong>FileZilla 虛擬主機文件共享設定</strong></p>
<p>1.下載<a href="https://portableapps.com/apps/internet/filezilla_portable">FileZilla</a>，解縮到隨身系統中</p>
<p>2.<span>啟動Ubuntu主機，確認虛擬主機的整體系統埠號並開啟putty</span></p>
<p>3.<span>設定預連接IP為個人主機IP，在設定SSH中的X11，將Enable X11 fowarding打勾並在X display location中輸入localhost:0.0</span></p>
<p><span>4.存儲後開啟，並輸入帳密kmol2020</span></p>
<p><span>5.開啟FileZilla，點選檔案-&gt;站台管理員-&gt;新增站台個人主機IP</span></p>
<p><span>6.協定改為 SFTP-SSH，主機輸入個人主機IP及連接埠輸入22</span></p>
<p><span>7.將登入型式改為詢問密碼、使用者命名為kmol2020</span></p>
<p><span>8.設定完成後，點選連線，密碼輸入kmol2020，即完成文件共享</span></p>
<p><span>Week15-1抽點網站：<a href="http://mde.tw/cdbw15-1/content/40723225.html">http://mde.tw/cdbw15-1/content/40723225.html</a></span></p>
<p><span>Week15-1抽點倉儲：<a href="https://github.com/mdecourse/cdbw15-1">https://github.com/mdecourse/cdbw15-1</a></span></p>
<h1>Assignment</h1>
<h2>Assignment1</h2>
<em><strong>random grouping</strong></em>
<p><span>（1）</span><span><span><span> request</span></span></span><span><span>模組：此模組是為了可以使用Python來下載網頁上的資料，根據</span></span><br/><span><span><span>請求</span></span></span><span><span>模組建立</span><span>適當</span><span>的HTTP請求，通過HTTP請求從網頁伺服器下載</span></span><br/><span><span>指定的資料，分為兩種模式發布，獲取。</span></span><br/><br/><span><span>參考文獻：</span><a href="https://ithelp.ithome.com.tw/articles/10206215"><span><span>https：/ /ithelp.ithome.com.tw/articles/10206215</span></span></a></span></p>
<p><span><span><span>(2) <span>ast</span><span>模組: 此模組是python原始碼到位元組碼的一種中間產物，藉助</span><span>ast</span><br/><span>模組可以從語法樹的角度分析原始碼結構，其中的語法</span><span>ast.literal_eval</span><span></span><br/><span>是為了能夠安全地評估表達式節點或包含Python文字或容器顯示的字符</span><br/><span>串。提供的字符串或節點只能由以下Python文字結構組成：字符串、字</span><br/><span>節、數字、元組、列表、字典、集合、布林值、None。</span><br/><br/><span>參考文獻:<span> </span></span><a href="https://docs.python.org/3/library/ast.html"><span>https://docs.python.org/3/library/ast.html</span></a><br/><span><a href="https://www.itread01.com/content/1544847254.html">https://www.itread01.com/content/1544847254.html</a></span><br/><span></span></span></span></span></p>
<div class="syntaxhighlighter py">(3)<span> </span><span>random</span>模組:此模組用於生成偽隨機數，且有許多種用法，例如:隨機選取<br/><span>choice</span>、隨機選取<span> sample</span><span> </span>(一次選多筆資料)、隨機調換順序<span> shuffle</span><span> </span>(就<br/>地調換順序)、隨機取得亂數<span> </span><span>random</span><span> </span>(0~1之間的隨機亂數)、隨機取得亂<br/>數<span> </span><span>uniform</span><span> </span>(可以指定範圍)。<br/><br/>參考文獻:<span> </span><a href="https://ithelp.ithome.com.tw/articles/10207483"><span>https://ithelp.ithome.com.tw/articles/10207483</span><br/></a><br/>(4)<span> </span><span>for</span>迴圈: 在處理資料的時候，時常會需要重複執行某些相同的步驟；而迴<br/>圈 (loop) 的作用是讓指定的某段敘述在條件符合的情況下一直重覆執行，<br/>是程式設計中很重要的一種控制結構，且分為兩類:<span>for</span>、<span>while</span></div>
<div class="syntaxhighlighter py"><span>參考文獻:<a href="https://medium.com/ccclub/ccclub-python-for-beginners-tutorial4990a5757aa6"><span><span> </span>https://medium.com/ccclub/ccclub-python-for-beginners-tutorial4990a5757aa6</span></a></span></div>
<div class="syntaxhighlighter py"><span></span></div>
<div class="syntaxhighlighter py"><span></span></div>
<div class="syntaxhighlighter py"><em><strong>portable system</strong></em>
<div class="syntaxhighlighter py">
<p><span>1.先去GOOGLE SEARCH <a href="https://www.python.org/downloads/windows/">PYTHON</a></span> </p>
<p><span>2.下載<span><a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2-amd64.exe">Windows x86-64 executable installer</a> </span></span></p>
<p><span><span><span>3.載完點並<span>不要勾選pip選項，接著按下next選取放置資料夾</span></span></span></span></p>
<p><span><span><span><span>4.在隨身系統下新增放置資料夾cd2020，並在cd2020下新建資料夾data，data&lt;py382&lt;<span>wscite432&lt;portablegit</span></span></span></span></span></p>
<p><span><span><span><span><span>5.下載SciTE系統<span> </span><span><span><a href="https://www.scintilla.org/wscite432.zip">full 64-bit download</a></span>，下載完後解壓縮至data下的wscite432</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>6.在cd2020下建立新的start.bat及stop.bat</span></span></span></span></span></span></p>
<p>7.至<span><span>SciTE系統更改</span></span>start.bat及stop.bat</p>
<p><span>8.</span><span>載入MSYS2 </span><span><a class="button" href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">msys2-x86_64-20190524.exe</a></span><span> 至data</span></p>
<p><span>9.</span><span>載入PortableGit </span><span><a href="https://github.com/git-for-windows/git/releases/download/v2.25.1.windows.1/PortableGit-2.25.1-64-bit.7z.exe">64-bit Git for Windows Portable</a></span><span> 至</span><span>portablegit</span></p>
<p><span>10</span><span color="#000000"><span>.裝入<span><a href="https://bootstrap.pypa.io/get-pip.py">pip</a></span></span></span><span>，另存新檔到data</span><span>11.測試</span><span>將python3.8.2版本，將少的模組下載回來</span></p>
<p><span></span></p>
<em><strong>Four Wheel Car</strong></em></div>
<div class="syntaxhighlighter py">
<p><span><a href="https://www.coppeliarobotics.com/helpFiles/en/simulation.htm"><strong>Simulation</strong></a></span><strong>&amp;<span><span><a href="https://www.coppeliarobotics.com/helpFiles/en/simulationPropertiesDialog.htm">Simulation settings dialog</a></span><span>:</span></span></strong><br/><span>  在任何機器製作完成後，都需要進行模擬測試，以確保機器能正常運作，或者測試機器的耐用性及安全性。在這兩章節主要說明了如何建立模擬，也教了如何調整模擬的速度，這能使我們模擬起來更有效率，接著就是模擬對話框的基本操作，其中也講解了在模擬過程可能會發生的狀況及解決方法，像是模擬速度調高或調慢，會造成不穩定或不準確的模擬，反之；還有因顯示卡的效能不足而造成模擬之屏幕刷新率太慢……等。</span><br/><span><a href="https://www.coppeliarobotics.com/helpFiles/en/bubbleRobTutorial.htm"><strong>BubbleRob tutorial</strong></a><strong>:</strong></span><br/><span>  此教程主要在教如何設置bubbleRob機器人，在上學期我們有實際操作過，其中的內容包含如何建立模型、設置感測器、調整視覺感測器，建立模型包含機器人本體、車輪、支撐滑塊、障礙物，不只是設置模型外型及尺寸，還要設置模型的物理屬性；設置感測器則是為了偵測障礙物，讓機器人能順利避開障礙物；視覺感測器則是為了能夠讓我們在機器人模擬時觀察機器人前方狀況。</span><br/><span><a href="https://www.coppeliarobotics.com/helpFiles/en/lineFollowingBubbleRobTutorial.htm"><strong>Line following BubbleRob tutorial</strong></a><strong>:</strong></span><br/><span> 在此教程中，旨在擴展</span><span>BubbleRob</span><span>的功能，以使</span><span>BubbleRob</span><span>遵循地面上的規則，也就是調整視覺感測器並設置路徑及給定程式碼，使機器人能隨著路徑運作。</span><br/><span><a href="https://www.coppeliarobotics.com/helpFiles/en/externalControllerTutorial.htm"><strong>External controller tutorial</strong></a><strong>:</strong></span><br/><span>  此教程說明好幾種方式能從外部控制機器人及模擬機器人，最方便的就是編寫程式碼直接附加到場景；另外還有利用編寫插件的方法，但此方法編寫程序更加複雜；第三種就是使用遠端API，此方法非常便捷也可以使用與運行真實機器人完全相同的程式碼來控制或模擬模型（例如虛擬機器人）</span>:第四種方法是通過ROS節點，ROS與遠程API相似，是使多個分佈式進程相互連接的便捷方法；第五種是透過BlueZero（BØ）節點，與ROS類似，BlueZero是使多個分佈式進程相互連接的一種便捷方法，並且是一種輕量級的跨平台解決方案。</p>
</div>
</div>
<h2>Assignment2</h2>
<em><strong>DesignCollaborationBetterProducts</strong></em>
<p>通過協同設計創造更好的產品-心態，工具，過程</p>
<p>今日的數位產品比以往都更加複雜。創建它們需要多個團隊，<br/>成員，每個成員都有自己的一套技能和專業知識。以我們的客戶Savvy為例，<br/>與以下人員有緊密合作：產品經理，UX設計人員，視覺設計師，開發人員，產品<br/>顧問和行銷人員。</p>
<p>我們使用協同設計來處理這種複雜的工作。並且正確完成，協同設計可幫助<br/>每個專家都有共同的心態，流程和工具，更快共同建立更好的產品，</p>
<p>我們編寫了此資源以幫助其他應用程式創建者採用協同設計文化和流程。<br/>學習為什麼協同設計對於創造引人注目的產品以及經驗很重要。<br/>我們還將深入探討協同設計的心態和文化、工具的要素，<br/>進行有效的協同設計，以及實際工作中的協同設計的例子。</p>
<p>什麼是協同"設計"</p>
<p>在進入正題之前，我們需要同時了解什麼是協同設計以及什麼不是。<br/>簡單來說，協同設計就是在設計優先的環境中進行協作。<br/>但由於設計的本質，特別是我們在Savvy所做的設計，設計協作趨向於<br/>超越人們通常認為的協作。</p>
<p>通常將協作定義為兩個或兩個以上的人共同完成一項任務<br/>為了實現共同的目標，協同設計甚至包含更多。</p>
<p>協同設計包括更多不同技術，艱鉅挑戰和更大規模的人員，這些都對目標<br/>具有深遠的影響。</p>
<p>您可能將協作視為兩個人用心在一個藝術品上。它只需要溝通、團隊合作同心協力。<br/>協同設計是指一組策展人精心設計訪問者的體驗。<br/>他們選擇藝術品，選擇在何處以及如何懸掛藝術品，<br/>它所居住的房間（以及房間的照明，家具），甚至前面的房間和建築物同整為一個藝術品</p>
<p>為什麼協同設計很重要</p>
<p>你可以在沒有協作的情況下設計產品，但是需要一個協同設計過程才能完成<br/>好的產品。這就是協同設計如此重要的原因。</p>
<p>我們不僅為客戶構建應用程序。Savvy構建了複雜的多平台體驗和內部系統，<br/>甚至在某些情況下還包括整個品牌和業務。為此，我們為了利用專業知識<br/>跨足多個核心項目：策畫、設計、開發和行銷。每個項目都涉及了各成員各自的技能和專長。</p>
<p>協同設計將這些思想融合在一起，將他們各自的專業知識結合在一起創建解決方案，<br/>以解決共同目標的所有方面。而不是以一個人遇到問題角度來看，<br/>協同設計將這個問題擺在所有專家面前，迫使他們考慮新觀點和可能性。</p>
<p>例如，我們在設計過程的早期就讓我們的開發人員參與進來，以確保我們能盡快解決技術問題的機會和局限性。<br/>這使我們可以利用並提升我們的技術能力，同時進一步消除在處理程序成本高昂的障礙。<br/>它還限制了一個人可以單獨處理工作的可能，從而使工作保持公開狀態並強調用戶需求和產品目標。</p>
<p>培養協同設計心態</p>
<p><br/>在設計過程中建立有效的協同時，正確的思維方式有好的幫助。<br/>它訂定了誰進行協作並如何進行以及達到何種目的的準則。</p>
<p>與每個人合作</p>
<p>設計師有時會認為不是設計師的人沒有資格提供良好的產品反饋。<br/>但是出色的設計不只是視覺效果。它涵蓋了有關產品的所有內容，從它的品牌、工程技術及其成長</p>
<p>協同設計包含許多人，每個人都有自己的觀點和優勢。它給大家一個發聲的平台。<br/>這些新鮮的觀點為設計師提供了更多信息。觀點使設計師能夠對其他設計有永久影響去選擇做出正確的開發和營銷選擇。</p>
<p>與客戶的協作與與其他設計師和團隊成員的協同一樣重要。<br/>在Savvy，我們讓客戶參與其產品的整個創作過程。我們花些時間來解釋選項，並與客戶進行討論以確保我們<br/>了解他們的想法。</p>
<p>這使我們能夠及早獲得客戶的認可，並從明確的起點和終點開始工作。<br/>更大的曝光量並不是什麼大驚喜，第一次沒有人知道他們正在做什麼。</p>
<p>客戶合作意味著無需花費高昂成本、後退和不必要的會議就能更快地獲得更完整的產品。</p>
<p>設計很容易陷入角色而忽略全局。通過更早地參與更多的人與隊友建立更緊密的聯繫並共同承擔責任，<br/>以及對產品成功的期待。這些能夠創建一個更加開放和透明的流程以及更緊密聯繫和投入的團隊。</p>
<p>合作是持續性的</p>
<p>客戶向我們提出了複雜的挑戰和目標。當然不用說，我們也繼續努力與我們的客戶進行長達數月甚至數年的交流，<br/>並積累了過去的大量知識決策，研究和其他有價值的環境。</p>
<p>通過採用上下文優先的方法，你可以確保每個人都處於最高知識水平。<br/>這樣，他們就可以在產品上做出最明智的決定。<br/>為了做到這一點，在Savvy 我們通過引入所有團隊成員儘早記錄和保存會議內容，<br/>建立一些重疊的地方讓下一個團隊成員在過程就像客戶一樣。</p>
<p>在個案協作的基礎上，上下文也同樣重要。請遵循以下準則以保持協作中的上下文優先：</p>
<p><br/>在顯示你的工作之前提供脈絡。如果您正在工作，你的工作是否出現在螢幕上提供信息，<br/>你可能因為這樣失去了聽眾的注意力。</p>
<p>你必須描述您要解決的問題或要達到的目標。</p>
<p>介紹與當前問題相關的工作。解釋你的想法以及為什麼要這麼做的某些決定。</p>
<p>具體說明你要反饋的內容。</p>
<p>合作是開放、誠實和無畏的</p>
<p>將你的工作（自己）放在協同設計並不容易。情緒會阻礙提供開放和誠實的反饋，<br/>尤其是當你擔心會傷害他人的感受時。</p>
<p>在Savvy這並不意味著在協同中沒有情感的位置。感覺如何在設計中很重要。<br/>我們為有情緒在決策中有情緒的人創建一個環境。因為離開談話可能會抹消潛在的想法或解決方案。<br/>充其量，僅提供完整圍繞事實和數據進行務實的討論是沒有的。<br/>在最壞的情況下，它可能是誤導或提供虛假的敘述。</p>
<p>我們的團隊還相信，不要害怕提供反饋。這意味著了解需要解決的問題以及客戶的品牌和目標。<br/>這也意味著要問很多提問以發現相關思想或幫助指導決策。</p>
<p>嘗試以探索性和指導性的方式提出反饋意見，以建立並改善工作而不是拆散。</p>
<p>您的反饋意見應具有建設性。與其說你不喜歡什麼，不如說反饋以指出您要幫助解決的問題。<br/>在以下方面提供可行的步驟改善工作，或者至少改善你的思維背後的理由。<br/>而且不要忘記表達你喜歡什麼以及為什麼。</p>
<p>合作不僅僅是新的想法</p>
<p>開放並接受協作反饋是一回事，解析這些想法是另一回事並將它們用作激發自己的催化劑。<br/>這是一項一直不斷發展起來的能力。一種實踐方法是成為更好的聽眾。</p>
<p>通常，在與他人交談時，我們會更多地考慮接下來要說的內容比起別人在說什麼，這會影響反饋過程<br/>尤其是在設計中，因為我們在聽到其他意見或解決方案時通常都知道自己要說什麼。</p>
<p>當您選擇先聆聽然後再做出反應時，它可以讓您完全理解反饋<br/>有人在解說並讓你更深入他們使用的觀點是什麼和他們來自哪裡？<br/>很有可能這是你在創建過程。通過聽取接受並理解反饋的上下文和推理，<br/>正在向更多的視角，思維方式和體驗方式開放你的設計。<br/>然後，您可以針對挑戰目標和用例測試這些新觀點。你可以設計用於它們是否更適合用戶。</p>
<p>當所有協作者都在積極聆聽時，更容易接受反饋。<br/>最終，提供良好反饋的技能來自學習如何獲得反饋。當我們做一個<br/>努力成為更好的聽眾，我們也發現自己變得更加謙虛，並成為更好設計師。</p>
<p>尋找和使用正確的設計協同工具</p>
<p>正確的工具在增強團隊的設計協同思維方面大有幫助。<br/>在這部分，你會了解如何找尋協同工具。我們也會根據你的經驗適合的協同工具。</p>
<p>選擇合適的工具</p>
<p>有效的協同工具為協同者消除了所有障礙，使他們在工作上能夠快速輕鬆地連接與互動。<br/>這將重點放在提供反饋上。它們還允許其他人在不破壞原始設計的情況下進行協同。</p>
<p>過去，我們使用依賴於提供基本版本控制的工具，而不是真正的協同功能。<br/>例如，設計人員將保存一個Sketch文件並將其上傳到Dropbox。<br/>然後，另一個團隊成員將下載它，進行處理，然後重新上傳。文件在他人的手上時沒有簡單的方法進行更改。<br/>我們嘗試了與Github類似的方法，實踐證明，該工具非常適合管理代碼庫，但在迭代設計工作中卻不那麼重要。<br/>不用說，這些版本控制流程使我們的協同更加耗時、令人困惑，而且不合作性。</p>
<p>但是現在我們根據協同類型從多種更高級的工具中進行選擇並想要實現。</p>
<p>FIGMA</p>
<p>這是一個協同優先的共享工作區工具。 Figma非常適合在其中有多個人設計文件的相同區域。<br/>你可以同時觀看成員設計或在同一設計上一起工作。</p>
<p>優點:</p>
<p>Figma減少了個人在獨自一人工作的能力</p>
<p>無需添加不必要的修飾或創建靜態的可傳送結果實現協同。所以你無需更改工作流程即可展示設計 。</p>
<p>它可以輕鬆地在本機環境中查看並與之互動，並隨意進行調整。</p>
<p>何時使用：文檔編輯，高保真原設計檔，即時協同和隨時改變的客戶想法，<br/>通過一系列螢幕的內容來解釋並獲得有關設計方向的反饋。</p>
<p>MARVEL</p>
<p><br/>雖然Figma傾向於感覺更自由和靈活，但Marvel允許更標準化的形式合作。<br/>這也使我們的客戶可以輕鬆地與我們合作。</p>
<p>優點:</p>
<p>Marvel是一個更簡潔，更型式和專注的空間，非常適合與非設計合作團隊成員。</p>
<p>它剔除了客戶需帳戶的支付或為了進行工作必需深入了解工具的所有需求。</p>
<p>客戶可以下載視窗並通過Marvel在設備環境中查看它們的運行情況。</p>
<p>使用時間：與客戶和開發人員一起呈現更多最終設計工作。 （學習比較Marvel與其他原型工具。）</p>
<p>其他協同工具</p>
<p>Zeplin是一個有用的傳遞工具，可讓開發人員深入了解設計工作的細節。。 （我們在這裡更深入地討論Zeplin。）</p>
<p>Quip是集思廣益和產品/程式文件的絕佳平台。我們用它來記錄並組織團隊成員在一個專案<br/>工作時需要了解的所有背景和知識。對於集思廣益而不是視覺關注的新想法也很有用。</p>
<p>請注意，還有許多其他工具可以為協作增加類似的好處，<br/>上面列出的，該列表代表了在我們日常工作中對我們有效的協同工具，並不表示所有選項都可能對您的團隊有效。</p>
<p>Savvy的程式設計在實踐中協同</p>
<p>現在，讓我們採用上面概述的最佳實踐和工具，並展示它們在現實生活中如何組合在一起。<br/>我們將使用Press Play中的實時繪圖體驗來演示設計協同的重要性。這項經驗涉及到<br/>跨學科的團隊成員數量，包括視覺設計師、UX設計人員、開發人員、產品經理，當然還有客戶。</p>
<p>脈絡與挑戰</p>
<p>Press Play是一個抽獎活動應用程序，可保存每日，每周和每月的圖紙。用戶獲得門票觀看廣告，<br/>然後選擇五個表情符號輸入繪圖。然後根據他們的選擇如何與圖形的隨機選擇表情符號匹配。<br/>這個特殊的任務有我們為正在等待現場繪畫結果的用戶創造了一個有趣而激動人心的現場體驗。</p>
<p>對於我們來說，為這種體驗創建類似遊戲的動畫非常重要。我們特別想要<br/>在用戶去看他們的屏幕時在螢幕上喚起一種嬉戲和期待感所選表情符號與抽獎活動附圖中的表情符號匹配。</p>
<p>就是說，我們需要注意動畫所需的複雜程度及其影響在整個產品的時間表和成本上。<br/>我們目標是將保真度提高到合理的時間，而不會顯著影響項目的預算。</p>
<p>協同程式</p>
<p>階段一:設計原型與集思廣益</p>
<p>首先，一個Savvy 的UX設計師創建了Press Play的整體用戶體驗和設計原型，<br/>確定了需要視窗畫面和每個視窗的時間安排。她還提出了一個粗略的概念，用於實時繪圖動畫，<br/>根據客戶的需求和項目的已建立UX。</p>
<p>她向產品經理和視覺設計師展示了是設計原型和粗糙的動畫。<br/>然後，這三個人都與客戶會面，因此每個人都可以直接聽到反饋。</p>
<p>第二階段：研究與脈絡</p>
<p>Savvy的視覺設計師負責創建實際的繪圖動畫帶來吸睛的感覺，<br/>讓Press Play產品沒有太多先入為主的知識。為了快速裝訂，他與UX設計人員和產品經理進行了深入的交談。<br/>他還致力於其他研究有時間了解整體產品目標，挑戰並熟悉工作。<br/>至今。如前所述，他是設計原型演示的一部分並為客戶的反饋。</p>
<p>在這種情況下，他進行了一些與手頭任務直接相關的其他研究。<br/>通過這樣做，他確保自己了解現場繪畫體驗的要求，目標和挑戰。<br/>他查看了具有類似經驗和保真度的其他應用，並參考了動畫，<br/>以了解最終動畫到底需要顯示什麼（在這種情況下，表情符號和用戶的表情符號選擇）。<br/>在過於束縛解決方案之前，他遇到了一個精明的人iOS開發人員了解技術限制和注意事項</p>
<p>然後，我們的視覺設計師和UX設計師集思廣益，對視覺效果至關重要。他們<br/>同意需要為用戶建立緩慢的提示以建立懸念/期望。</p>
<p>階段3：反覆和反饋</p>
<p>當我們的視覺設計師沿多個不同方向工作時，他選擇了UX設計師聊聊他在Figma中的進度和設計。<br/>通過討論工作，他們激發了更多想法和迭代，<br/>同時確保它們符合客戶期望。還有更多他手下有很多可靠的選擇，<br/>他再次與iOS開發人員會面，以確保一切都在從技術角度出發。</p>
<p>階段4：客戶的反饋和發展</p>
<p>當我們找到更多，更最終的體驗版本時，視覺設計師走了通過他們與客戶一起使用Figma。<br/>Press Play產品經理和UX設計師還提供了反饋和指導。</p>
<p>一旦他們都了解了引起顧客興趣的東西，視覺設計師便開始最大限度地發揮作用。<br/>視覺效果並使它們為開發做好準備。他繼續與iOS開發人員合作，在技術層面上充分利用該概念。</p>
<p>最終結果</p>
<p>Press Play的實時繪圖動畫是工作中設計協作的一個示例。一隊跨學科專家一起解決更大的設計和開發挑戰含義。<br/>沒有設計協作，我們將找不到理想的交集用戶體驗，視覺和技術。</p>
<p>當客戶在他的應用程式中看到生動的動畫時，他稱其為“開創性”。</p>
<p>而且，這種Press Play體驗的研究，合作和創造對我們有幫助<br/>發現產品用戶旅程中的空白。最初，現場繪畫的目的是為了娛樂<br/>向用戶顯示結果的方式。在設計過程中，我們意識到，<br/>如果用戶不觀看實時繪圖，他們就會迷失方向，無法體驗終結繪製的用戶旅程。</p>
<p>基於這一發現，我們決定在其他兩個地方也改進該應用程序。我們添加了一個獲勝者圈子的結果/實時繪圖元素，<br/>以及用戶的輸贏歷史記錄部分應用程序的細節部分。<br/>最後，設計協作使我們得以實現這一未實現的目標需要用戶體驗。</p>
<p>結論說明</p>
<p>設計協同的產品和經驗需要解決建築中伴隨的複雜、關鍵問題。<br/>通過利用多個團隊成員的專業知識跨學科的設計協作可確保團隊從各個角度應對挑戰並尋求更好的解決方案。<br/>借助正確的思維方式、工具和流程，進行設計協同使團隊能夠通過創造性思維和迭代來更深入。</p>
<p>我們希望本指南為您提供良好的基礎，以便您可以構建自己的有效設計協同過程。<br/>您可以在Savvy博客上了解有關設計和產品策略的更多信息，並隨時在Savvy Apps網站上與我們聯繫以尋求幫助。</p>
<h2>Assignment3</h2>
<p>4.8結論</p>
<p>本章介紹基於傳遞函數概念的分析工具。主要是，我們開發瞭如何計算時間響應和確定係統性能。 我們還介紹了根軌跡和波特圖技術。</p>
<p>5.基於傳遞函數的設計</p>
<p>5.1引言</p>
<p>解決控制設計問題始終是一個挑戰，即使對於更有經驗的人也是如此控制工程師。必須為其設計控制器的系統可以是現有的，但表現不佳，我們想改進，或者我們正在構建的新系統。在這兩種情況下，設計程序均在通過定義所需的性能來獲得系統的數學模型這將使我們能夠確定控制器的結構及其參數。通常，控制系統旨在保證某些性能考慮到系統的閉環動力學。這樣的表演可以歸納為瞬態和穩態的穩定性和行為國家政權。通過尊重給定係統的局限性，它始終是我們試圖通過尋求折衷來改善瞬態狀態的情況在系統可能出現的超調和其速度之間。為了穩定狀態，我們進行搜索以確保誤差小於某個選定的公差。我們將在本章中考慮以響應設計要求的控制器-是經典的，例如比例，積分和微分作用，他們的近似值。本章的其餘部分安排如下。在第2節中，控制設計問題已製定。第三部分介紹了設計經典的經驗方法控制器。在第4節中，使用根軌跡設計經典控制器方法被開發出來。第5節介紹了Bode方法。第6節介紹了一個案例研究包括為直流電動機套件設計不同的控制器。</p>
<p> </p>
<p>5.2控制設計問題的表述</p>
<p>在本章中，我們將考慮性能較差的現有系統，我們想改善。我們的願望是對瞬態同時採取行動通過在閉環中引入控制器來強制整個系統按預期運行。可以在時域或頻域中給出性能。同時領域，穩定性是設計過程中的首要要求。在旁邊</p>
<p>穩定性，我們希望瞬態和穩態機制能夠在理想的方式。在瞬態狀態的時域中，我們應控製過衝，所選時間的上升時間和穩定時間將取決於我們希望為我們的系統保證精度。對於穩態制度，我們希望確保系統的錯誤小於特定的指定值。</p>
<p>在頻域中，除了性能根據閉環動力學的穩定性，增益相位和通常來說，很難在兩者之間建立聯繫時域和頻域的性能。更具體地說，所研究的系統由傳遞函數描述，例如可以使用識別方法獲得。讓我們用G（s）表示這個傳遞函數。必須在控制的第一階段確定此模型設計。然後，根據控制工程師的性能和專業知識進行設計我們可以選擇可以正確響應設計的控制器結構目標。然後，使用適當的方法，我們可以確定控制器的增益。</p>
<p>因此，控制設計問題包括確定：</p>
<ul>
<li>控制器的結構</li>
<li>及其參數</li>
</ul>
<p>使用所需的性能和一些啟發式方法來強制關閉-所選控制器的動態迴路表現出理想的表現。 這種方法由於被忽略的不同現象，在實踐中可能需要改進動力學。</p>
<p>我們將在本章中考慮的控制器是經典的控制器，</p>
<p>在文獻中被認為是比例（P），積分（I）和微分（D）動作及其近似也稱為相位滯後超前和相位超前滯後。 控制器的傳遞函數將表示為C（z）。 確定控制器後，相應的差分方程為使用適當的微控制器實時獲取和實現。 對於有關此主題的更多詳細信息，我們請讀者參考實現部分詳細。</p>
<p>由於系統性能通常是連續不斷地給出的，因為這樣做更自然。設計步驟可以在</p>
<p>連續時間或離散時間。一般來說，設計方法使用以下步驟：</p>
<ul>
<li>表演轉換成桿子</li>
<li>選擇所需控制器的結構</li>
<li>使用所需的極點確定控制器參數</li>
<li>對控制器的參數進行了一些調整以補償</li>
</ul>
<p>預期行為與實際行為之間可能存在差異設計過程中未考慮的系統零。重要的是要注意，控制器參數的確定可以在連續時間或離散時間完成。在連續時間內在這種情況下，確定控制器參數，然後控制器進行將fer函數轉換為離散時域，得到差分方程我們應該實時實施。對於離散時間，差分方程為直接獲得併實施。</p>
<p>設計方法可以是以下方法之一：</p>
<ul>
<li>基於經驗方法的設計</li>
<li>基於根軌跡法的設計</li>
<li>基於波特圖法的設計</li>
</ul>
<p>在本章的其餘部分，我們將介紹這些方法並給出一些示例展示這些技術如何應用於實際系統。 仿真結果將是用來表明其有效性。 控制器的設計是連續進行的然後獲得相應的控制器離散時間版本。 的本章使用在Boukas中開發的方法。</p>
<p>5.3基於經驗方法的設計</p>
<p>實證方法基於齊格勒-尼科爾斯的工作。這些方法與其他方法相比，具有優勢，因為它們允許設計除即使在沒有系統數學模型的情況下，也可以找到所需的控制器。Ziegler-Nichols方法主要基於動力學系統的響應。Ziegler-Nichols提出了使用時間響應的方法，其他使用時間響應的方法。頻率響應。在本節的其餘部分，我們將介紹這些方法。首先讓我們集中討論時間響應方法。在這些方法中我們可以處理開環穩定和不穩定的系統。第一種方法考慮在原點無極點也不佔優勢的穩定係統的情況複雜的兩極。在這種情況下，階躍響應由圖5.1中的給出。從中直接確定參數T，τ和k以及Tab。其中k是系統的增益，τ是上升時間，T是延遲時間。</p>
<p>5.4基於根軌蹟的設計</p>
<p>根源技術是控制系統分析和設計的強大工具。tems。 在本節中，我們將使用它來設計控制器，以確保理想的表演。 該系統的模型應該以</p>
<p>轉換功能。根軌跡技術可用於設計經典控制器。 的該方法背後的技術包括選擇使座位穿過表演中給定的極點。</p>
<p>其中k，-zi和-pi分別是系統的增益，零和極點。首先讓我們集中討論比例控制器的設計。</p>
<p>其中KP是要確定的控制器的增益。基本控製過程中可以知道，比例控制器的作用是同時考慮了瞬態和穩態機制，但其能力有限。它可以減少錯誤，但絕不會使其等於零。計算控制器的增益，我們將使用以下過程</p>
<p>1.計算閉環動力學的特徵方程，即：1 + KpG（s）令K = kKp</p>
<p>2.畫出從0到無窮大的K的根軌跡</p>
<p>3.確定基因座和對應於所需的阻尼比ξ（cosθ=ξ）並得到主導的極點對。 讓SD成為具有虛構積極部分的人。</p>
<p>4.計算得出極點sd的增益K</p>
<h1>開會紀錄</h1>
<h2>第一次開會紀錄</h2>
<p>分配assignment1工作</p>
<p>分配內容 : </p>
<p>40623115亂數分組程序<br/>40623251可攜系統<br/>40723204可攜系統<br/>42723210四輪車<br/>40723212四輪車<br/>40723225四輪車<br/>40723232亂數分組程序<br/>40723234可攜系統<br/>40723238四輪車<br/>40723245亂數分組<br/>程序40723250</p>
<p><em><strong>開會影片： <a href="https://youtu.be/r0AABAp474U">https://youtu.be/r0AABAp474U</a></strong></em></p>
<h2>第二次開會紀錄</h2>
</div>
<div class="syntaxhighlighter py">
<p><span>分配assignment2工作</span></p>
<p><span>分配內容：</span></p>
<p><span>Topic 1:<br/>40623115<br/>40623251<br/>40723204<br/>42723210<br/>40723212<br/>40723225</span></p>
<p><span>Topic 0:<br/>40723232<br/>40723234<br/>40723238<br/>40723245<br/>40723250</span></p>
<p><em><strong><span>開會影片：<a href="https://www.youtube.com/watch?v=a69tNWKmC64&amp;feature=youtu.be">https://www.youtube.com/watch?v=a69tNWKmC64&amp;feature=youtu.be</a></span></strong></em></p>
<br/><em></em><span>第三次開會紀錄</span>
</div>
<div class="syntaxhighlighter py">
<p><span>分配assignment3工作</span></p>
<p><span><span>分配內容：</span></span></p>
<p>翻譯<span> </span><a href="https://drive.google.com/file/d/1KRb8vX_LB_3hkLwK1z1LOP8wl_StIZOR/view?usp=sharing">MSModelingAndTFApproaches.pdf</a><span>. </span>:</p>
<p>40723232 1-20</p>
<p>40723234 21-50</p>
<p>40723204 51-80</p>
<p>40723225 81-110</p>
<p>40623115 111-140</p>
<p>40723245 171-207</p>
<p><span>翻譯<span> </span><a href="https://drive.google.com/file/d/1y0QH6vI8uMymK9JI35EShVFS40Q8uwwq/view?usp=sharing">MechatronicDesignCases.pdf</a>. </span><span>:</span></p>
<p><span>40723238</span></p>
<p><span>40723210</span></p>
<p><span>翻譯<span> </span><a href="https://drive.google.com/file/d/1AFADmyNrwprE7AesaFAecZZquIfzbLw-/view?usp=sharing">MechaEducFutureNeed.pdf</a><span>. </span>:</span></p>
<p><span>40723250</span></p>
<p><span>40723210</span></p>
<p><span>翻譯<a href="https://drive.google.com/file/d/118Vho5ECQfQ1XK_hnlptpCVdNgQ00HuZ/view?usp=sharing">MechaFutureAndChallenges.pdf</a><span>. </span>:</span></p>
<p><span>40723212</span></p>
<p>Mechatronic project</p>
<p>40723210</p>
<p><em><strong>開會影片：<a href="https://www.youtube.com/watch?v=GmKxlNPx-gs&amp;feature=youtu.be">https://www.youtube.com/watch?v=GmKxlNPx-gs&amp;feature=youtu.be</a></strong></em></p>
<p><em></em></p>
</div>
</div>
</div>
</div>